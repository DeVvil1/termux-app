diff --git a/.gitignore b/.gitignore
index 3daa7a4..8902d87 100644
--- a/.gitignore
+++ b/.gitignore
@@ -43,3 +43,5 @@ local.properties
 .Trashes
 ehthumbs.db
 Thumbs.db
+
+app/release/
diff --git a/app/build.gradle b/app/build.gradle
index cbf0ead..9ee5cfd 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -20,8 +20,8 @@ android {
 
     buildTypes {
         release {
-            minifyEnabled true
-            shrinkResources true
+            minifyEnabled false
+            shrinkResources false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 6ce5007..f49181a 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -9,9 +9,10 @@
     <uses-feature android:name="android.software.leanback" android:required="false" />
 
     <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-    <uses-permission android:name="android.permission.WAKE_LOCK" />
+    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
     <uses-permission android:name="android.permission.VIBRATE" />
+    <uses-permission android:name="android.permission.WAKE_LOCK" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
 
     <application
         android:extractNativeLibs="true"
@@ -45,20 +46,12 @@
             <meta-data android:name="android.app.shortcuts" android:resource="@xml/shortcuts" />
         </activity>
 
-        <activity
-            android:name="com.termux.app.TermuxHelpActivity"
-            android:exported="false"
-            android:theme="@android:style/Theme.Material.Light.DarkActionBar"
-            android:parentActivityName=".app.TermuxActivity"
-            android:resizeableActivity="true"
-            android:label="@string/application_name" />
-
         <activity
             android:name="com.termux.filepicker.TermuxFileReceiverActivity"
             android:label="@string/application_name"
             android:taskAffinity="com.termux.filereceiver"
-            android:excludeFromRecents="true"
             android:resizeableActivity="true"
+            android:excludeFromRecents="true"
             android:noHistory="true">
             <!-- Accept multiple file types when sending. -->
             <intent-filter>
@@ -107,6 +100,77 @@
             </intent-filter>
         </provider>
 
+        <service
+            android:name="com.termux.app.TermuxService"
+            android:exported="false">
+        </service>
+
+        <receiver
+            android:name=".app.TermuxOpenReceiver">
+        </receiver>
+
+        <provider
+            android:authorities="com.termux.files"
+            android:readPermission="android.permission.permRead"
+            android:exported="true"
+            android:grantUriPermissions="true"
+            android:name="com.termux.app.TermuxOpenReceiver$ContentProvider">
+        </provider>
+
+        <!-- Termux:Boot -->
+        <receiver android:name=".boot.BootReceiver" android:exported="false">
+            <intent-filter>
+                <action android:name="android.intent.action.BOOT_COMPLETED" />
+            </intent-filter>
+        </receiver>
+
+        <service
+            android:name=".boot.BootJobService"
+            android:permission="android.permission.BIND_JOB_SERVICE" />
+
+        <!-- Termux:Styling -->
+        <activity
+            android:theme="@style/StylingDialogTheme"
+            android:name="com.termux.styling.TermuxStyleActivity"
+            android:noHistory="true"
+            android:exported="false" >
+        </activity>
+
+        <!-- Termux:Widget -->
+        <activity
+            android:name=".widget.TermuxCreateShortcutActivity"
+            android:label="@string/widget_single_shortcut_name"
+            android:theme="@android:style/Theme.Material.Light.DarkActionBar">
+            <intent-filter>
+                <action android:name="android.intent.action.CREATE_SHORTCUT" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+
+        <activity
+            android:name=".widget.TermuxLaunchShortcutActivity"
+            android:theme="@android:style/Theme.NoDisplay"
+            android:noHistory="true"
+            android:exported="true">
+        </activity>
+
+        <receiver
+            android:name=".widget.TermuxWidgetProvider"
+            android:label="@string/widget_shortcut_name" >
+            <intent-filter>
+                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
+            </intent-filter>
+            <meta-data
+                android:name="android.appwidget.provider"
+                android:resource="@xml/termux_appwidget_info">
+            </meta-data>
+        </receiver>
+
+        <service
+            android:name=".widget.TermuxWidgetService"
+            android:exported="false"
+            android:permission="android.permission.BIND_REMOTEVIEWS" />
+
         <service
             android:name="com.termux.app.TermuxService"
             android:exported="false" />
@@ -121,5 +185,4 @@
 
         <meta-data android:name="com.sec.android.support.multiwindow" android:value="true" />
     </application>
-
 </manifest>
diff --git a/app/src/main/assets/bootstrap-aarch64 b/app/src/main/assets/bootstrap-aarch64
new file mode 100644
index 0000000..5e90ed0
Binary files /dev/null and b/app/src/main/assets/bootstrap-aarch64 differ
diff --git a/app/src/main/assets/bootstrap-arm b/app/src/main/assets/bootstrap-arm
new file mode 100644
index 0000000..f0952b2
Binary files /dev/null and b/app/src/main/assets/bootstrap-arm differ
diff --git a/app/src/main/assets/bootstrap-i686 b/app/src/main/assets/bootstrap-i686
new file mode 100644
index 0000000..f8e541b
Binary files /dev/null and b/app/src/main/assets/bootstrap-i686 differ
diff --git a/app/src/main/assets/bootstrap-x86_64 b/app/src/main/assets/bootstrap-x86_64
new file mode 100644
index 0000000..9564f7f
Binary files /dev/null and b/app/src/main/assets/bootstrap-x86_64 differ
diff --git a/app/src/main/assets/colors/base16-3024-dark.properties b/app/src/main/assets/colors/base16-3024-dark.properties
new file mode 100644
index 0000000..eaee909
--- /dev/null
+++ b/app/src/main/assets/colors/base16-3024-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-3024.dark.256.xresources
+# Base16 3024
+# Scheme: Jan T. Sott (http://github.com/idleberg)
+foreground=#a5a2a2
+background=#090300
+cursor=#a5a2a2
+
+color0=#090300
+color1=#db2d20
+color2=#01a252
+color3=#fded02
+color4=#01a0e4
+color5=#a16a94
+color6=#b5e4f4
+color7=#a5a2a2
+color8=#5c5855
+color9=#db2d20
+color10=#01a252
+color11=#fded02
+color12=#01a0e4
+color13=#a16a94
+color14=#b5e4f4
+color15=#f7f7f7
+
+color16=#e8bbd0
+color17=#cdab53
+color18=#3a3432
+color19=#4a4543
+color20=#807d7c
+color21=#d6d5d4
diff --git a/app/src/main/assets/colors/base16-3024-light.properties b/app/src/main/assets/colors/base16-3024-light.properties
new file mode 100644
index 0000000..1f4dfe3
--- /dev/null
+++ b/app/src/main/assets/colors/base16-3024-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-3024.light.256.xresources
+# Base16 3024
+# Scheme: Jan T. Sott (http://github.com/idleberg)
+foreground=#4a4543
+background=#f7f7f7
+cursor=#4a4543
+
+color0=#090300
+color1=#db2d20
+color2=#01a252
+color3=#fded02
+color4=#01a0e4
+color5=#a16a94
+color6=#b5e4f4
+color7=#a5a2a2
+color8=#5c5855
+color9=#db2d20
+color10=#01a252
+color11=#fded02
+color12=#01a0e4
+color13=#a16a94
+color14=#b5e4f4
+color15=#f7f7f7
+
+color16=#e8bbd0
+color17=#cdab53
+color18=#3a3432
+color19=#4a4543
+color20=#807d7c
+color21=#d6d5d4
diff --git a/app/src/main/assets/colors/base16-apathy-dark.properties b/app/src/main/assets/colors/base16-apathy-dark.properties
new file mode 100644
index 0000000..37839cc
--- /dev/null
+++ b/app/src/main/assets/colors/base16-apathy-dark.properties
@@ -0,0 +1,28 @@
+foreground=   #81B5AC
+background=   #031A16
+cursor=  #81B5AC
+
+color0=       #031A16
+color1=       #3E9688
+color2=       #883E96
+color3=       #3E4C96
+color4=       #96883E
+color5=       #4C963E
+color6=       #963E4C
+color7=       #81B5AC
+
+color8=       #2B685E
+color9=       #3E9688
+color10=      #883E96
+color11=      #3E4C96
+color12=      #96883E
+color13=      #4C963E
+color14=      #963E4C
+color15=      #D2E7E4
+
+color16=      #3E7996
+color17=      #3E965B
+color18=      #0B342D
+color19=      #184E45
+color20=      #5F9C92
+color21=      #A7CEC8
\ No newline at end of file
diff --git a/app/src/main/assets/colors/base16-apathy-light.properties b/app/src/main/assets/colors/base16-apathy-light.properties
new file mode 100644
index 0000000..4bd16ea
--- /dev/null
+++ b/app/src/main/assets/colors/base16-apathy-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-apathy.light.256.xresources
+# Base16 Apathy
+# Scheme: Jannik Siebert (https://github.com/janniks)
+foreground=#184E45
+background=#D2E7E4
+cursor=#184E45
+
+color0=#031A16
+color1=#3E9688
+color2=#883E96
+color3=#3E4C96
+color4=#96883E
+color5=#4C963E
+color6=#963E4C
+color7=#81B5AC
+color8=#2B685E
+color9=#3E9688
+color10=#883E96
+color11=#3E4C96
+color12=#96883E
+color13=#4C963E
+color14=#963E4C
+color15=#D2E7E4
+
+color16=#3E7996
+color17=#3E965B
+color18=#0B342D
+color19=#184E45
+color20=#5F9C92
+color21=#A7CEC8
diff --git a/app/src/main/assets/colors/base16-ashes-dark.properties b/app/src/main/assets/colors/base16-ashes-dark.properties
new file mode 100644
index 0000000..9518bcb
--- /dev/null
+++ b/app/src/main/assets/colors/base16-ashes-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-ashes.dark.256.xresources
+# Base16 Ashes
+# Scheme: Jannik Siebert (https://github.com/janniks)
+foreground=#C7CCD1
+background=#1C2023
+cursor=#C7CCD1
+
+color0=#1C2023
+color1=#C7AE95
+color2=#95C7AE
+color3=#AEC795
+color4=#AE95C7
+color5=#C795AE
+color6=#95AEC7
+color7=#C7CCD1
+color8=#747C84
+color9=#C7AE95
+color10=#95C7AE
+color11=#AEC795
+color12=#AE95C7
+color13=#C795AE
+color14=#95AEC7
+color15=#F3F4F5
+
+color16=#C7C795
+color17=#C79595
+color18=#393F45
+color19=#565E65
+color20=#ADB3BA
+color21=#DFE2E5
diff --git a/app/src/main/assets/colors/base16-ashes-light.properties b/app/src/main/assets/colors/base16-ashes-light.properties
new file mode 100644
index 0000000..d168e65
--- /dev/null
+++ b/app/src/main/assets/colors/base16-ashes-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-ashes.light.256.xresources
+# Base16 Ashes
+# Scheme: Jannik Siebert (https://github.com/janniks)
+foreground=#565E65
+background=#F3F4F5
+cursor=#565E65
+
+color0=#1C2023
+color1=#C7AE95
+color2=#95C7AE
+color3=#AEC795
+color4=#AE95C7
+color5=#C795AE
+color6=#95AEC7
+color7=#C7CCD1
+color8=#747C84
+color9=#C7AE95
+color10=#95C7AE
+color11=#AEC795
+color12=#AE95C7
+color13=#C795AE
+color14=#95AEC7
+color15=#F3F4F5
+
+color16=#C7C795
+color17=#C79595
+color18=#393F45
+color19=#565E65
+color20=#ADB3BA
+color21=#DFE2E5
diff --git a/app/src/main/assets/colors/base16-atelierdune-dark.properties b/app/src/main/assets/colors/base16-atelierdune-dark.properties
new file mode 100644
index 0000000..1d1a72e
--- /dev/null
+++ b/app/src/main/assets/colors/base16-atelierdune-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-atelierdune.dark.256.xresources
+# Base16 Atelier Dune
+# Scheme: Bram de Haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/dune)
+foreground=#a6a28c
+background=#20201d
+cursor=#a6a28c
+
+color0=#20201d
+color1=#d73737
+color2=#60ac39
+color3=#cfb017
+color4=#6684e1
+color5=#b854d4
+color6=#1fad83
+color7=#a6a28c
+color8=#7d7a68
+color9=#d73737
+color10=#60ac39
+color11=#cfb017
+color12=#6684e1
+color13=#b854d4
+color14=#1fad83
+color15=#fefbec
+
+color16=#b65611
+color17=#d43552
+color18=#292824
+color19=#6e6b5e
+color20=#999580
+color21=#e8e4cf
diff --git a/app/src/main/assets/colors/base16-atelierdune-light.properties b/app/src/main/assets/colors/base16-atelierdune-light.properties
new file mode 100644
index 0000000..686e871
--- /dev/null
+++ b/app/src/main/assets/colors/base16-atelierdune-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-atelierdune.light.256.xresources
+# Base16 Atelier Dune
+# Scheme: Bram de Haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/dune)
+foreground=#6e6b5e
+background=#fefbec
+cursor=#6e6b5e
+
+color0=#20201d
+color1=#d73737
+color2=#60ac39
+color3=#cfb017
+color4=#6684e1
+color5=#b854d4
+color6=#1fad83
+color7=#a6a28c
+color8=#7d7a68
+color9=#d73737
+color10=#60ac39
+color11=#cfb017
+color12=#6684e1
+color13=#b854d4
+color14=#1fad83
+color15=#fefbec
+
+color16=#b65611
+color17=#d43552
+color18=#292824
+color19=#6e6b5e
+color20=#999580
+color21=#e8e4cf
diff --git a/app/src/main/assets/colors/base16-atelierforest-dark.properties b/app/src/main/assets/colors/base16-atelierforest-dark.properties
new file mode 100644
index 0000000..74ebb8a
--- /dev/null
+++ b/app/src/main/assets/colors/base16-atelierforest-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-atelierforest.dark.256.xresources
+# Base16 Atelier Forest
+# Scheme: Bram de Haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/forest)
+foreground=#a8a19f
+background=#1b1918
+cursor=#a8a19f
+
+color0=#1b1918
+color1=#f22c40
+color2=#5ab738
+color3=#d5911a
+color4=#407ee7
+color5=#6666ea
+color6=#00ad9c
+color7=#a8a19f
+color8=#766e6b
+color9=#f22c40
+color10=#5ab738
+color11=#d5911a
+color12=#407ee7
+color13=#6666ea
+color14=#00ad9c
+color15=#f1efee
+
+color16=#df5320
+color17=#c33ff3
+color18=#2c2421
+color19=#68615e
+color20=#9c9491
+color21=#e6e2e0
diff --git a/app/src/main/assets/colors/base16-atelierforest-light.properties b/app/src/main/assets/colors/base16-atelierforest-light.properties
new file mode 100644
index 0000000..f653fc7
--- /dev/null
+++ b/app/src/main/assets/colors/base16-atelierforest-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-atelierforest.light.256.xresources
+# Base16 Atelier Forest
+# Scheme: Bram de Haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/forest)
+foreground=#68615e
+background=#f1efee
+cursor=#68615e
+
+color0=#1b1918
+color1=#f22c40
+color2=#5ab738
+color3=#d5911a
+color4=#407ee7
+color5=#6666ea
+color6=#00ad9c
+color7=#a8a19f
+color8=#766e6b
+color9=#f22c40
+color10=#5ab738
+color11=#d5911a
+color12=#407ee7
+color13=#6666ea
+color14=#00ad9c
+color15=#f1efee
+
+color16=#df5320
+color17=#c33ff3
+color18=#2c2421
+color19=#68615e
+color20=#9c9491
+color21=#e6e2e0
diff --git a/app/src/main/assets/colors/base16-atelierheath-dark.properties b/app/src/main/assets/colors/base16-atelierheath-dark.properties
new file mode 100644
index 0000000..963c906
--- /dev/null
+++ b/app/src/main/assets/colors/base16-atelierheath-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-atelierheath.dark.256.xresources
+# Base16 Atelier Heath
+# Scheme: Bram de Haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/heath)
+foreground=#ab9bab
+background=#1b181b
+cursor=#ab9bab
+
+color0=#1b181b
+color1=#ca402b
+color2=#379a37
+color3=#bb8a35
+color4=#516aec
+color5=#7b59c0
+color6=#159393
+color7=#ab9bab
+color8=#776977
+color9=#ca402b
+color10=#379a37
+color11=#bb8a35
+color12=#516aec
+color13=#7b59c0
+color14=#159393
+color15=#f7f3f7
+
+color16=#a65926
+color17=#cc33cc
+color18=#292329
+color19=#695d69
+color20=#9e8f9e
+color21=#d8cad8
diff --git a/app/src/main/assets/colors/base16-atelierheath-light.properties b/app/src/main/assets/colors/base16-atelierheath-light.properties
new file mode 100644
index 0000000..2423c79
--- /dev/null
+++ b/app/src/main/assets/colors/base16-atelierheath-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-atelierheath.light.256.xresources
+# Base16 Atelier Heath
+# Scheme: Bram de Haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/heath)
+foreground=#695d69
+background=#f7f3f7
+cursor=#695d69
+
+color0=#1b181b
+color1=#ca402b
+color2=#379a37
+color3=#bb8a35
+color4=#516aec
+color5=#7b59c0
+color6=#159393
+color7=#ab9bab
+color8=#776977
+color9=#ca402b
+color10=#379a37
+color11=#bb8a35
+color12=#516aec
+color13=#7b59c0
+color14=#159393
+color15=#f7f3f7
+
+color16=#a65926
+color17=#cc33cc
+color18=#292329
+color19=#695d69
+color20=#9e8f9e
+color21=#d8cad8
diff --git a/app/src/main/assets/colors/base16-atelierlakeside-dark.properties b/app/src/main/assets/colors/base16-atelierlakeside-dark.properties
new file mode 100644
index 0000000..ab50889
--- /dev/null
+++ b/app/src/main/assets/colors/base16-atelierlakeside-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-atelierlakeside.dark.256.xresources
+# Base16 Atelier Lakeside
+# Scheme: Bram de Haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/lakeside/)
+foreground=#7ea2b4
+background=#161b1d
+cursor=#7ea2b4
+
+color0=#161b1d
+color1=#d22d72
+color2=#568c3b
+color3=#8a8a0f
+color4=#257fad
+color5=#5d5db1
+color6=#2d8f6f
+color7=#7ea2b4
+color8=#5a7b8c
+color9=#d22d72
+color10=#568c3b
+color11=#8a8a0f
+color12=#257fad
+color13=#5d5db1
+color14=#2d8f6f
+color15=#ebf8ff
+
+color16=#935c25
+color17=#b72dd2
+color18=#1f292e
+color19=#516d7b
+color20=#7195a8
+color21=#c1e4f6
diff --git a/app/src/main/assets/colors/base16-atelierlakeside-light.properties b/app/src/main/assets/colors/base16-atelierlakeside-light.properties
new file mode 100644
index 0000000..29f4e9f
--- /dev/null
+++ b/app/src/main/assets/colors/base16-atelierlakeside-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-atelierlakeside.light.256.xresources
+# Base16 Atelier Lakeside
+# Scheme: Bram de Haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/lakeside/)
+foreground=#516d7b
+background=#ebf8ff
+cursor=#516d7b
+
+color0=#161b1d
+color1=#d22d72
+color2=#568c3b
+color3=#8a8a0f
+color4=#257fad
+color5=#5d5db1
+color6=#2d8f6f
+color7=#7ea2b4
+color8=#5a7b8c
+color9=#d22d72
+color10=#568c3b
+color11=#8a8a0f
+color12=#257fad
+color13=#5d5db1
+color14=#2d8f6f
+color15=#ebf8ff
+
+color16=#935c25
+color17=#b72dd2
+color18=#1f292e
+color19=#516d7b
+color20=#7195a8
+color21=#c1e4f6
diff --git a/app/src/main/assets/colors/base16-atelierseaside-dark.properties b/app/src/main/assets/colors/base16-atelierseaside-dark.properties
new file mode 100644
index 0000000..9073901
--- /dev/null
+++ b/app/src/main/assets/colors/base16-atelierseaside-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-atelierseaside.dark.256.xresources
+# Base16 Atelier Seaside
+# Scheme: Bram de Haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/seaside/)
+foreground=#8ca68c
+background=#131513
+cursor=#8ca68c
+
+color0=#131513
+color1=#e6193c
+color2=#29a329
+color3=#c3c322
+color4=#3d62f5
+color5=#ad2bee
+color6=#1999b3
+color7=#8ca68c
+color8=#687d68
+color9=#e6193c
+color10=#29a329
+color11=#c3c322
+color12=#3d62f5
+color13=#ad2bee
+color14=#1999b3
+color15=#f0fff0
+
+color16=#87711d
+color17=#e619c3
+color18=#242924
+color19=#5e6e5e
+color20=#809980
+color21=#cfe8cf
diff --git a/app/src/main/assets/colors/base16-atelierseaside-light.properties b/app/src/main/assets/colors/base16-atelierseaside-light.properties
new file mode 100644
index 0000000..30f1db6
--- /dev/null
+++ b/app/src/main/assets/colors/base16-atelierseaside-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-atelierseaside.light.256.xresources
+# Base16 Atelier Seaside
+# Scheme: Bram de Haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/seaside/)
+foreground=#5e6e5e
+background=#f0fff0
+cursor=#5e6e5e
+
+color0=#131513
+color1=#e6193c
+color2=#29a329
+color3=#c3c322
+color4=#3d62f5
+color5=#ad2bee
+color6=#1999b3
+color7=#8ca68c
+color8=#687d68
+color9=#e6193c
+color10=#29a329
+color11=#c3c322
+color12=#3d62f5
+color13=#ad2bee
+color14=#1999b3
+color15=#f0fff0
+
+color16=#87711d
+color17=#e619c3
+color18=#242924
+color19=#5e6e5e
+color20=#809980
+color21=#cfe8cf
diff --git a/app/src/main/assets/colors/base16-bespin-dark.properties b/app/src/main/assets/colors/base16-bespin-dark.properties
new file mode 100644
index 0000000..44e2902
--- /dev/null
+++ b/app/src/main/assets/colors/base16-bespin-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-bespin.dark.256.xresources
+# Base16 Bespin
+# Scheme: Jan T. Sott
+foreground=#8a8986
+background=#28211c
+cursor=#8a8986
+
+color0=#28211c
+color1=#cf6a4c
+color2=#54be0d
+color3=#f9ee98
+color4=#5ea6ea
+color5=#9b859d
+color6=#afc4db
+color7=#8a8986
+color8=#666666
+color9=#cf6a4c
+color10=#54be0d
+color11=#f9ee98
+color12=#5ea6ea
+color13=#9b859d
+color14=#afc4db
+color15=#baae9e
+
+color16=#cf7d34
+color17=#937121
+color18=#36312e
+color19=#5e5d5c
+color20=#797977
+color21=#9d9b97
diff --git a/app/src/main/assets/colors/base16-bespin-light.properties b/app/src/main/assets/colors/base16-bespin-light.properties
new file mode 100644
index 0000000..fe4a050
--- /dev/null
+++ b/app/src/main/assets/colors/base16-bespin-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-bespin.light.256.xresources
+# Base16 Bespin
+# Scheme: Jan T. Sott
+foreground=#5e5d5c
+background=#baae9e
+cursor=#5e5d5c
+
+color0=#28211c
+color1=#cf6a4c
+color2=#54be0d
+color3=#f9ee98
+color4=#5ea6ea
+color5=#9b859d
+color6=#afc4db
+color7=#8a8986
+color8=#666666
+color9=#cf6a4c
+color10=#54be0d
+color11=#f9ee98
+color12=#5ea6ea
+color13=#9b859d
+color14=#afc4db
+color15=#baae9e
+
+color16=#cf7d34
+color17=#937121
+color18=#36312e
+color19=#5e5d5c
+color20=#797977
+color21=#9d9b97
diff --git a/app/src/main/assets/colors/base16-brewer-dark.properties b/app/src/main/assets/colors/base16-brewer-dark.properties
new file mode 100644
index 0000000..bcbca4f
--- /dev/null
+++ b/app/src/main/assets/colors/base16-brewer-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-brewer.dark.256.xresources
+# Base16 Brewer
+# Scheme: Timothée Poisot (http://github.com/tpoisot)
+foreground=#b7b8b9
+background=#0c0d0e
+cursor=#b7b8b9
+
+color0=#0c0d0e
+color1=#e31a1c
+color2=#31a354
+color3=#dca060
+color4=#3182bd
+color5=#756bb1
+color6=#80b1d3
+color7=#b7b8b9
+color8=#737475
+color9=#e31a1c
+color10=#31a354
+color11=#dca060
+color12=#3182bd
+color13=#756bb1
+color14=#80b1d3
+color15=#fcfdfe
+
+color16=#e6550d
+color17=#b15928
+color18=#2e2f30
+color19=#515253
+color20=#959697
+color21=#dadbdc
diff --git a/app/src/main/assets/colors/base16-brewer-light.properties b/app/src/main/assets/colors/base16-brewer-light.properties
new file mode 100644
index 0000000..bff9832
--- /dev/null
+++ b/app/src/main/assets/colors/base16-brewer-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-brewer.light.256.xresources
+# Base16 Brewer
+# Scheme: Timothée Poisot (http://github.com/tpoisot)
+foreground=#515253
+background=#fcfdfe
+cursor=#515253
+
+color0=#0c0d0e
+color1=#e31a1c
+color2=#31a354
+color3=#dca060
+color4=#3182bd
+color5=#756bb1
+color6=#80b1d3
+color7=#b7b8b9
+color8=#737475
+color9=#e31a1c
+color10=#31a354
+color11=#dca060
+color12=#3182bd
+color13=#756bb1
+color14=#80b1d3
+color15=#fcfdfe
+
+color16=#e6550d
+color17=#b15928
+color18=#2e2f30
+color19=#515253
+color20=#959697
+color21=#dadbdc
diff --git a/app/src/main/assets/colors/base16-bright-dark.properties b/app/src/main/assets/colors/base16-bright-dark.properties
new file mode 100644
index 0000000..6dd80cd
--- /dev/null
+++ b/app/src/main/assets/colors/base16-bright-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-bright.dark.256.xresources
+# Base16 Bright
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#e0e0e0
+background=#000000
+cursor=#e0e0e0
+
+color0=#000000
+color1=#fb0120
+color2=#a1c659
+color3=#fda331
+color4=#6fb3d2
+color5=#d381c3
+color6=#76c7b7
+color7=#e0e0e0
+color8=#b0b0b0
+color9=#fb0120
+color10=#a1c659
+color11=#fda331
+color12=#6fb3d2
+color13=#d381c3
+color14=#76c7b7
+color15=#ffffff
+
+color16=#fc6d24
+color17=#be643c
+color18=#303030
+color19=#505050
+color20=#d0d0d0
+color21=#f5f5f5
diff --git a/app/src/main/assets/colors/base16-bright-light.properties b/app/src/main/assets/colors/base16-bright-light.properties
new file mode 100644
index 0000000..1d5b41f
--- /dev/null
+++ b/app/src/main/assets/colors/base16-bright-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-bright.light.256.xresources
+# Base16 Bright
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#505050
+background=#ffffff
+cursor=#505050
+
+color0=#000000
+color1=#fb0120
+color2=#a1c659
+color3=#fda331
+color4=#6fb3d2
+color5=#d381c3
+color6=#76c7b7
+color7=#e0e0e0
+color8=#b0b0b0
+color9=#fb0120
+color10=#a1c659
+color11=#fda331
+color12=#6fb3d2
+color13=#d381c3
+color14=#76c7b7
+color15=#ffffff
+
+color16=#fc6d24
+color17=#be643c
+color18=#303030
+color19=#505050
+color20=#d0d0d0
+color21=#f5f5f5
diff --git a/app/src/main/assets/colors/base16-chalk-dark.properties b/app/src/main/assets/colors/base16-chalk-dark.properties
new file mode 100644
index 0000000..28eb668
--- /dev/null
+++ b/app/src/main/assets/colors/base16-chalk-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-chalk.dark.256.xresources
+# Base16 Chalk
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#d0d0d0
+background=#151515
+cursor=#d0d0d0
+
+color0=#151515
+color1=#fb9fb1
+color2=#acc267
+color3=#ddb26f
+color4=#6fc2ef
+color5=#e1a3ee
+color6=#12cfc0
+color7=#d0d0d0
+color8=#505050
+color9=#fb9fb1
+color10=#acc267
+color11=#ddb26f
+color12=#6fc2ef
+color13=#e1a3ee
+color14=#12cfc0
+color15=#f5f5f5
+
+color16=#eda987
+color17=#deaf8f
+color18=#202020
+color19=#303030
+color20=#b0b0b0
+color21=#e0e0e0
diff --git a/app/src/main/assets/colors/base16-chalk-light.properties b/app/src/main/assets/colors/base16-chalk-light.properties
new file mode 100644
index 0000000..155cb54
--- /dev/null
+++ b/app/src/main/assets/colors/base16-chalk-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-chalk.light.256.xresources
+# Base16 Chalk
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#303030
+background=#f5f5f5
+cursor=#303030
+
+color0=#151515
+color1=#fb9fb1
+color2=#acc267
+color3=#ddb26f
+color4=#6fc2ef
+color5=#e1a3ee
+color6=#12cfc0
+color7=#d0d0d0
+color8=#505050
+color9=#fb9fb1
+color10=#acc267
+color11=#ddb26f
+color12=#6fc2ef
+color13=#e1a3ee
+color14=#12cfc0
+color15=#f5f5f5
+
+color16=#eda987
+color17=#deaf8f
+color18=#202020
+color19=#303030
+color20=#b0b0b0
+color21=#e0e0e0
diff --git a/app/src/main/assets/colors/base16-codeschool-dark.properties b/app/src/main/assets/colors/base16-codeschool-dark.properties
new file mode 100644
index 0000000..a06fbd7
--- /dev/null
+++ b/app/src/main/assets/colors/base16-codeschool-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-codeschool.dark.256.xresources
+# Base16 Codeschool
+# Scheme: brettof86
+foreground=#9ea7a6
+background=#232c31
+cursor=#9ea7a6
+
+color0=#232c31
+color1=#2a5491
+color2=#237986
+color3=#a03b1e
+color4=#484d79
+color5=#c59820
+color6=#b02f30
+color7=#9ea7a6
+color8=#3f4944
+color9=#2a5491
+color10=#237986
+color11=#a03b1e
+color12=#484d79
+color13=#c59820
+color14=#b02f30
+color15=#b5d8f6
+
+color16=#43820d
+color17=#c98344
+color18=#1c3657
+color19=#2a343a
+color20=#84898c
+color21=#a7cfa3
diff --git a/app/src/main/assets/colors/base16-codeschool-light.properties b/app/src/main/assets/colors/base16-codeschool-light.properties
new file mode 100644
index 0000000..080a882
--- /dev/null
+++ b/app/src/main/assets/colors/base16-codeschool-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-codeschool.light.256.xresources
+# Base16 Codeschool
+# Scheme: brettof86
+foreground=#2a343a
+background=#b5d8f6
+cursor=#2a343a
+
+color0=#232c31
+color1=#2a5491
+color2=#237986
+color3=#a03b1e
+color4=#484d79
+color5=#c59820
+color6=#b02f30
+color7=#9ea7a6
+color8=#3f4944
+color9=#2a5491
+color10=#237986
+color11=#a03b1e
+color12=#484d79
+color13=#c59820
+color14=#b02f30
+color15=#b5d8f6
+
+color16=#43820d
+color17=#c98344
+color18=#1c3657
+color19=#2a343a
+color20=#84898c
+color21=#a7cfa3
diff --git a/app/src/main/assets/colors/base16-colors-dark.properties b/app/src/main/assets/colors/base16-colors-dark.properties
new file mode 100644
index 0000000..46ae2d5
--- /dev/null
+++ b/app/src/main/assets/colors/base16-colors-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-colors.dark.256.xresources
+# Base16 Colors
+# Scheme: mrmrs (http://clrs.cc)
+foreground=#bbbbbb
+background=#111111
+cursor=#bbbbbb
+
+color0=#111111
+color1=#ff4136
+color2=#2ecc40
+color3=#ffdc00
+color4=#0074d9
+color5=#b10dc9
+color6=#7fdbff
+color7=#bbbbbb
+color8=#777777
+color9=#ff4136
+color10=#2ecc40
+color11=#ffdc00
+color12=#0074d9
+color13=#b10dc9
+color14=#7fdbff
+color15=#ffffff
+
+color16=#ff851b
+color17=#85144b
+color18=#333333
+color19=#555555
+color20=#999999
+color21=#dddddd
diff --git a/app/src/main/assets/colors/base16-colors-light.properties b/app/src/main/assets/colors/base16-colors-light.properties
new file mode 100644
index 0000000..95a2eee
--- /dev/null
+++ b/app/src/main/assets/colors/base16-colors-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-colors.light.256.xresources
+# Base16 Colors
+# Scheme: mrmrs (http://clrs.cc)
+foreground=#555555
+background=#ffffff
+cursor=#555555
+
+color0=#111111
+color1=#ff4136
+color2=#2ecc40
+color3=#ffdc00
+color4=#0074d9
+color5=#b10dc9
+color6=#7fdbff
+color7=#bbbbbb
+color8=#777777
+color9=#ff4136
+color10=#2ecc40
+color11=#ffdc00
+color12=#0074d9
+color13=#b10dc9
+color14=#7fdbff
+color15=#ffffff
+
+color16=#ff851b
+color17=#85144b
+color18=#333333
+color19=#555555
+color20=#999999
+color21=#dddddd
diff --git a/app/src/main/assets/colors/base16-default-dark.properties b/app/src/main/assets/colors/base16-default-dark.properties
new file mode 100644
index 0000000..47bc182
--- /dev/null
+++ b/app/src/main/assets/colors/base16-default-dark.properties
@@ -0,0 +1,32 @@
+# https=//github.com/chriskempson/base16-xresources/blob/master/base16-default.dark.256.xresources
+# Base16 Default
+# Scheme=Chris Kempson (http=//chriskempson.com)
+
+foreground=#d8d8d8
+background=#181818
+cursor=#d8d8d8
+
+color0=#181818
+color1=#ab4642
+color2=#a1b56c
+color3=#f7ca88
+color4=#7cafc2
+color5=#ba8baf
+color6=#86c1b9
+color7=#d8d8d8
+
+color8=#585858
+color9=#ab4642
+color10=#a1b56c
+color11=#f7ca88
+color12=#7cafc2
+color13=#ba8baf
+color14=#86c1b9
+color15=#f8f8f8
+
+color16=#dc9656
+color17=#a16946
+color18=#282828
+color19=#383838
+color20=#b8b8b8
+color21=#e8e8e8
\ No newline at end of file
diff --git a/app/src/main/assets/colors/base16-default-light.properties b/app/src/main/assets/colors/base16-default-light.properties
new file mode 100644
index 0000000..f854463
--- /dev/null
+++ b/app/src/main/assets/colors/base16-default-light.properties
@@ -0,0 +1,28 @@
+foreground=   #383838
+background=   #f8f8f8
+cursor=  #383838
+
+color0=       #181818
+color1=       #ab4642
+color2=       #a1b56c
+color3=       #f7ca88
+color4=       #7cafc2
+color5=       #ba8baf
+color6=       #86c1b9
+color7=       #d8d8d8
+
+color8=       #585858
+color9=       #ab4642
+color10=      #a1b56c
+color11=      #f7ca88
+color12=      #7cafc2
+color13=      #ba8baf
+color14=      #86c1b9
+color15=      #f8f8f8
+
+color16=      #dc9656
+color17=      #a16946
+color18=      #282828
+color19=      #383838
+color20=      #b8b8b8
+color21=      #e8e8e8
\ No newline at end of file
diff --git a/app/src/main/assets/colors/base16-eighties-dark.properties b/app/src/main/assets/colors/base16-eighties-dark.properties
new file mode 100644
index 0000000..90b6ff0
--- /dev/null
+++ b/app/src/main/assets/colors/base16-eighties-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-eighties.dark.256.xresources
+# Base16 Eighties
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#d3d0c8
+background=#2d2d2d
+cursor=#d3d0c8
+
+color0=#2d2d2d
+color1=#f2777a
+color2=#99cc99
+color3=#ffcc66
+color4=#6699cc
+color5=#cc99cc
+color6=#66cccc
+color7=#d3d0c8
+color8=#747369
+color9=#f2777a
+color10=#99cc99
+color11=#ffcc66
+color12=#6699cc
+color13=#cc99cc
+color14=#66cccc
+color15=#f2f0ec
+
+color16=#f99157
+color17=#d27b53
+color18=#393939
+color19=#515151
+color20=#a09f93
+color21=#e8e6df
diff --git a/app/src/main/assets/colors/base16-eighties-light.properties b/app/src/main/assets/colors/base16-eighties-light.properties
new file mode 100644
index 0000000..8e5f29b
--- /dev/null
+++ b/app/src/main/assets/colors/base16-eighties-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-eighties.light.256.xresources
+# Base16 Eighties
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#515151
+background=#f2f0ec
+cursor=#515151
+
+color0=#2d2d2d
+color1=#f2777a
+color2=#99cc99
+color3=#ffcc66
+color4=#6699cc
+color5=#cc99cc
+color6=#66cccc
+color7=#d3d0c8
+color8=#747369
+color9=#f2777a
+color10=#99cc99
+color11=#ffcc66
+color12=#6699cc
+color13=#cc99cc
+color14=#66cccc
+color15=#f2f0ec
+
+color16=#f99157
+color17=#d27b53
+color18=#393939
+color19=#515151
+color20=#a09f93
+color21=#e8e6df
diff --git a/app/src/main/assets/colors/base16-embers-dark.properties b/app/src/main/assets/colors/base16-embers-dark.properties
new file mode 100644
index 0000000..8372901
--- /dev/null
+++ b/app/src/main/assets/colors/base16-embers-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-embers.dark.256.xresources
+# Base16 Embers
+# Scheme: Jannik Siebert (https://github.com/janniks)
+foreground=#A39A90
+background=#16130F
+cursor=#A39A90
+
+color0=#16130F
+color1=#826D57
+color2=#57826D
+color3=#6D8257
+color4=#6D5782
+color5=#82576D
+color6=#576D82
+color7=#A39A90
+color8=#5A5047
+color9=#826D57
+color10=#57826D
+color11=#6D8257
+color12=#6D5782
+color13=#82576D
+color14=#576D82
+color15=#DBD6D1
+
+color16=#828257
+color17=#825757
+color18=#2C2620
+color19=#433B32
+color20=#8A8075
+color21=#BEB6AE
diff --git a/app/src/main/assets/colors/base16-embers-light.properties b/app/src/main/assets/colors/base16-embers-light.properties
new file mode 100644
index 0000000..d60ac4a
--- /dev/null
+++ b/app/src/main/assets/colors/base16-embers-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-embers.light.256.xresources
+# Base16 Embers
+# Scheme: Jannik Siebert (https://github.com/janniks)
+foreground=#433B32
+background=#DBD6D1
+cursor=#433B32
+
+color0=#16130F
+color1=#826D57
+color2=#57826D
+color3=#6D8257
+color4=#6D5782
+color5=#82576D
+color6=#576D82
+color7=#A39A90
+color8=#5A5047
+color9=#826D57
+color10=#57826D
+color11=#6D8257
+color12=#6D5782
+color13=#82576D
+color14=#576D82
+color15=#DBD6D1
+
+color16=#828257
+color17=#825757
+color18=#2C2620
+color19=#433B32
+color20=#8A8075
+color21=#BEB6AE
diff --git a/app/src/main/assets/colors/base16-flat-dark.properties b/app/src/main/assets/colors/base16-flat-dark.properties
new file mode 100644
index 0000000..3e63f3d
--- /dev/null
+++ b/app/src/main/assets/colors/base16-flat-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-flat.dark.256.xresources
+# Base16 Flat
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#e0e0e0
+background=#2C3E50
+cursor=#e0e0e0
+
+color0=#2C3E50
+color1=#E74C3C
+color2=#2ECC71
+color3=#F1C40F
+color4=#3498DB
+color5=#9B59B6
+color6=#1ABC9C
+color7=#e0e0e0
+color8=#95A5A6
+color9=#E74C3C
+color10=#2ECC71
+color11=#F1C40F
+color12=#3498DB
+color13=#9B59B6
+color14=#1ABC9C
+color15=#ECF0F1
+
+color16=#E67E22
+color17=#be643c
+color18=#34495E
+color19=#7F8C8D
+color20=#BDC3C7
+color21=#f5f5f5
diff --git a/app/src/main/assets/colors/base16-flat-light.properties b/app/src/main/assets/colors/base16-flat-light.properties
new file mode 100644
index 0000000..040cd23
--- /dev/null
+++ b/app/src/main/assets/colors/base16-flat-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-flat.light.256.xresources
+# Base16 Flat
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#7F8C8D
+background=#ECF0F1
+cursor=#7F8C8D
+
+color0=#2C3E50
+color1=#E74C3C
+color2=#2ECC71
+color3=#F1C40F
+color4=#3498DB
+color5=#9B59B6
+color6=#1ABC9C
+color7=#e0e0e0
+color8=#95A5A6
+color9=#E74C3C
+color10=#2ECC71
+color11=#F1C40F
+color12=#3498DB
+color13=#9B59B6
+color14=#1ABC9C
+color15=#ECF0F1
+
+color16=#E67E22
+color17=#be643c
+color18=#34495E
+color19=#7F8C8D
+color20=#BDC3C7
+color21=#f5f5f5
diff --git a/app/src/main/assets/colors/base16-google-dark.properties b/app/src/main/assets/colors/base16-google-dark.properties
new file mode 100644
index 0000000..659b2cd
--- /dev/null
+++ b/app/src/main/assets/colors/base16-google-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-google.dark.256.xresources
+# Base16 Google
+# Scheme: Seth Wright (http://sethawright.com)
+foreground=#c5c8c6
+background=#1d1f21
+cursor=#c5c8c6
+
+color0=#1d1f21
+color1=#CC342B
+color2=#198844
+color3=#FBA922
+color4=#3971ED
+color5=#A36AC7
+color6=#3971ED
+color7=#c5c8c6
+color8=#969896
+color9=#CC342B
+color10=#198844
+color11=#FBA922
+color12=#3971ED
+color13=#A36AC7
+color14=#3971ED
+color15=#ffffff
+
+color16=#F96A38
+color17=#3971ED
+color18=#282a2e
+color19=#373b41
+color20=#b4b7b4
+color21=#e0e0e0
diff --git a/app/src/main/assets/colors/base16-google-light.properties b/app/src/main/assets/colors/base16-google-light.properties
new file mode 100644
index 0000000..36e96b8
--- /dev/null
+++ b/app/src/main/assets/colors/base16-google-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-google.light.256.xresources
+# Base16 Google
+# Scheme: Seth Wright (http://sethawright.com)
+foreground=#373b41
+background=#ffffff
+cursor=#373b41
+
+color0=#1d1f21
+color1=#CC342B
+color2=#198844
+color3=#FBA922
+color4=#3971ED
+color5=#A36AC7
+color6=#3971ED
+color7=#c5c8c6
+color8=#969896
+color9=#CC342B
+color10=#198844
+color11=#FBA922
+color12=#3971ED
+color13=#A36AC7
+color14=#3971ED
+color15=#ffffff
+
+color16=#F96A38
+color17=#3971ED
+color18=#282a2e
+color19=#373b41
+color20=#b4b7b4
+color21=#e0e0e0
diff --git a/app/src/main/assets/colors/base16-grayscale-dark.properties b/app/src/main/assets/colors/base16-grayscale-dark.properties
new file mode 100644
index 0000000..3d0d6c2
--- /dev/null
+++ b/app/src/main/assets/colors/base16-grayscale-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-grayscale.dark.256.xresources
+# Base16 Grayscale
+# Scheme: Alexandre Gavioli (https://github.com/Alexx2/)
+foreground=#b9b9b9
+background=#101010
+cursor=#b9b9b9
+
+color0=#101010
+color1=#7c7c7c
+color2=#8e8e8e
+color3=#a0a0a0
+color4=#686868
+color5=#747474
+color6=#868686
+color7=#b9b9b9
+color8=#525252
+color9=#7c7c7c
+color10=#8e8e8e
+color11=#a0a0a0
+color12=#686868
+color13=#747474
+color14=#868686
+color15=#f7f7f7
+
+color16=#999999
+color17=#5e5e5e
+color18=#252525
+color19=#464646
+color20=#ababab
+color21=#e3e3e3
diff --git a/app/src/main/assets/colors/base16-grayscale-light.properties b/app/src/main/assets/colors/base16-grayscale-light.properties
new file mode 100644
index 0000000..6512c41
--- /dev/null
+++ b/app/src/main/assets/colors/base16-grayscale-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-grayscale.light.256.xresources
+# Base16 Grayscale
+# Scheme: Alexandre Gavioli (https://github.com/Alexx2/)
+foreground=#464646
+background=#f7f7f7
+cursor=#464646
+
+color0=#101010
+color1=#7c7c7c
+color2=#8e8e8e
+color3=#a0a0a0
+color4=#686868
+color5=#747474
+color6=#868686
+color7=#b9b9b9
+color8=#525252
+color9=#7c7c7c
+color10=#8e8e8e
+color11=#a0a0a0
+color12=#686868
+color13=#747474
+color14=#868686
+color15=#f7f7f7
+
+color16=#999999
+color17=#5e5e5e
+color18=#252525
+color19=#464646
+color20=#ababab
+color21=#e3e3e3
diff --git a/app/src/main/assets/colors/base16-greenscreen-dark.properties b/app/src/main/assets/colors/base16-greenscreen-dark.properties
new file mode 100644
index 0000000..09212b4
--- /dev/null
+++ b/app/src/main/assets/colors/base16-greenscreen-dark.properties
@@ -0,0 +1,28 @@
+foreground:   #00bb00
+background:   #001100
+cursor:  #00bb00
+
+color0:       #001100
+color1:       #007700
+color2:       #00bb00
+color3:       #007700
+color4:       #009900
+color5:       #00bb00
+color6:       #005500
+color7:       #00bb00
+
+color8:       #007700
+color9:       #007700
+color10:      #00bb00
+color11:      #007700
+color12:      #009900
+color13:      #00bb00
+color14:      #005500
+color15:      #00ff00
+
+color16:      #009900
+color17:      #005500
+color18:      #003300
+color19:      #005500
+color20:      #009900
+color21:      #00dd00
diff --git a/app/src/main/assets/colors/base16-greenscreen-light.properties b/app/src/main/assets/colors/base16-greenscreen-light.properties
new file mode 100644
index 0000000..7196747
--- /dev/null
+++ b/app/src/main/assets/colors/base16-greenscreen-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-greenscreen.light.256.xresources
+# Base16 Green Screen
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#005500
+background=#00ff00
+cursor=#005500
+
+color0=#001100
+color1=#007700
+color2=#00bb00
+color3=#007700
+color4=#009900
+color5=#00bb00
+color6=#005500
+color7=#00bb00
+color8=#007700
+color9=#007700
+color10=#00bb00
+color11=#007700
+color12=#009900
+color13=#00bb00
+color14=#005500
+color15=#00ff00
+
+color16=#009900
+color17=#005500
+color18=#003300
+color19=#005500
+color20=#009900
+color21=#00dd00
diff --git a/app/src/main/assets/colors/base16-harmonic16-dark.properties b/app/src/main/assets/colors/base16-harmonic16-dark.properties
new file mode 100644
index 0000000..14e150d
--- /dev/null
+++ b/app/src/main/assets/colors/base16-harmonic16-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-harmonic16.dark.256.xresources
+# Base16 harmonic16
+# Scheme: Jannik Siebert (https://github.com/janniks)
+foreground=#cbd6e2
+background=#0b1c2c
+cursor=#cbd6e2
+
+color0=#0b1c2c
+color1=#bf8b56
+color2=#56bf8b
+color3=#8bbf56
+color4=#8b56bf
+color5=#bf568b
+color6=#568bbf
+color7=#cbd6e2
+color8=#627e99
+color9=#bf8b56
+color10=#56bf8b
+color11=#8bbf56
+color12=#8b56bf
+color13=#bf568b
+color14=#568bbf
+color15=#f7f9fb
+
+color16=#bfbf56
+color17=#bf5656
+color18=#223b54
+color19=#405c79
+color20=#aabcce
+color21=#e5ebf1
diff --git a/app/src/main/assets/colors/base16-harmonic16-light.properties b/app/src/main/assets/colors/base16-harmonic16-light.properties
new file mode 100644
index 0000000..64c26ce
--- /dev/null
+++ b/app/src/main/assets/colors/base16-harmonic16-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-harmonic16.light.256.xresources
+# Base16 harmonic16
+# Scheme: Jannik Siebert (https://github.com/janniks)
+foreground=#405c79
+background=#f7f9fb
+cursor=#405c79
+
+color0=#0b1c2c
+color1=#bf8b56
+color2=#56bf8b
+color3=#8bbf56
+color4=#8b56bf
+color5=#bf568b
+color6=#568bbf
+color7=#cbd6e2
+color8=#627e99
+color9=#bf8b56
+color10=#56bf8b
+color11=#8bbf56
+color12=#8b56bf
+color13=#bf568b
+color14=#568bbf
+color15=#f7f9fb
+
+color16=#bfbf56
+color17=#bf5656
+color18=#223b54
+color19=#405c79
+color20=#aabcce
+color21=#e5ebf1
diff --git a/app/src/main/assets/colors/base16-isotope-dark.properties b/app/src/main/assets/colors/base16-isotope-dark.properties
new file mode 100644
index 0000000..fe61d97
--- /dev/null
+++ b/app/src/main/assets/colors/base16-isotope-dark.properties
@@ -0,0 +1,32 @@
+# Base16 Isotope
+# Scheme: Jan T. Sott
+
+foreground:   #d0d0d0
+background:   #000000
+cursor:  #d0d0d0
+
+color0:       #000000
+color1:       #ff0000
+color2:       #33ff00
+color3:       #ff0099
+color4:       #0066ff
+color5:       #cc00ff
+color6:       #00ffff
+color7:       #d0d0d0
+
+color8:       #808080
+color9:       #ff0000
+color10:      #33ff00
+color11:      #ff0099
+color12:      #0066ff
+color13:      #cc00ff
+color14:      #00ffff
+color15:      #ffffff
+
+color16:      #ff9900
+color17:      #3300ff
+color18:      #404040
+color19:      #606060
+color20:      #c0c0c0
+color21:      #e0e0e0
+
diff --git a/app/src/main/assets/colors/base16-isotope-light.properties b/app/src/main/assets/colors/base16-isotope-light.properties
new file mode 100644
index 0000000..3856f3f
--- /dev/null
+++ b/app/src/main/assets/colors/base16-isotope-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-isotope.light.256.xresources
+# Base16 Isotope
+# Scheme: Jan T. Sott
+foreground=#606060
+background=#ffffff
+cursor=#606060
+
+color0=#000000
+color1=#ff0000
+color2=#33ff00
+color3=#ff0099
+color4=#0066ff
+color5=#cc00ff
+color6=#00ffff
+color7=#d0d0d0
+color8=#808080
+color9=#ff0000
+color10=#33ff00
+color11=#ff0099
+color12=#0066ff
+color13=#cc00ff
+color14=#00ffff
+color15=#ffffff
+
+color16=#ff9900
+color17=#3300ff
+color18=#404040
+color19=#606060
+color20=#c0c0c0
+color21=#e0e0e0
diff --git a/app/src/main/assets/colors/base16-londontube-dark.properties b/app/src/main/assets/colors/base16-londontube-dark.properties
new file mode 100644
index 0000000..a437649
--- /dev/null
+++ b/app/src/main/assets/colors/base16-londontube-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-londontube.dark.256.xresources
+# Base16 London Tube
+# Scheme: Jan T. Sott
+foreground=#d9d8d8
+background=#231f20
+cursor=#d9d8d8
+
+color0=#231f20
+color1=#ee2e24
+color2=#00853e
+color3=#ffd204
+color4=#009ddc
+color5=#98005d
+color6=#85cebc
+color7=#d9d8d8
+color8=#737171
+color9=#ee2e24
+color10=#00853e
+color11=#ffd204
+color12=#009ddc
+color13=#98005d
+color14=#85cebc
+color15=#ffffff
+
+color16=#f386a1
+color17=#b06110
+color18=#1c3f95
+color19=#5a5758
+color20=#959ca1
+color21=#e7e7e8
diff --git a/app/src/main/assets/colors/base16-londontube-light.properties b/app/src/main/assets/colors/base16-londontube-light.properties
new file mode 100644
index 0000000..0c27029
--- /dev/null
+++ b/app/src/main/assets/colors/base16-londontube-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-londontube.light.256.xresources
+# Base16 London Tube
+# Scheme: Jan T. Sott
+foreground=#5a5758
+background=#ffffff
+cursor=#5a5758
+
+color0=#231f20
+color1=#ee2e24
+color2=#00853e
+color3=#ffd204
+color4=#009ddc
+color5=#98005d
+color6=#85cebc
+color7=#d9d8d8
+color8=#737171
+color9=#ee2e24
+color10=#00853e
+color11=#ffd204
+color12=#009ddc
+color13=#98005d
+color14=#85cebc
+color15=#ffffff
+
+color16=#f386a1
+color17=#b06110
+color18=#1c3f95
+color19=#5a5758
+color20=#959ca1
+color21=#e7e7e8
diff --git a/app/src/main/assets/colors/base16-marrakesh-dark.properties b/app/src/main/assets/colors/base16-marrakesh-dark.properties
new file mode 100644
index 0000000..115eae5
--- /dev/null
+++ b/app/src/main/assets/colors/base16-marrakesh-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-marrakesh.dark.256.xresources
+# Base16 Marrakesh
+# Scheme: Alexandre Gavioli (http://github.com/Alexx2/)
+foreground=#948e48
+background=#201602
+cursor=#948e48
+
+color0=#201602
+color1=#c35359
+color2=#18974e
+color3=#a88339
+color4=#477ca1
+color5=#8868b3
+color6=#75a738
+color7=#948e48
+color8=#6c6823
+color9=#c35359
+color10=#18974e
+color11=#a88339
+color12=#477ca1
+color13=#8868b3
+color14=#75a738
+color15=#faf0a5
+
+color16=#b36144
+color17=#b3588e
+color18=#302e00
+color19=#5f5b17
+color20=#86813b
+color21=#ccc37a
diff --git a/app/src/main/assets/colors/base16-marrakesh-light.properties b/app/src/main/assets/colors/base16-marrakesh-light.properties
new file mode 100644
index 0000000..bf68121
--- /dev/null
+++ b/app/src/main/assets/colors/base16-marrakesh-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-marrakesh.light.256.xresources
+# Base16 Marrakesh
+# Scheme: Alexandre Gavioli (http://github.com/Alexx2/)
+foreground=#5f5b17
+background=#faf0a5
+cursor=#5f5b17
+
+color0=#201602
+color1=#c35359
+color2=#18974e
+color3=#a88339
+color4=#477ca1
+color5=#8868b3
+color6=#75a738
+color7=#948e48
+color8=#6c6823
+color9=#c35359
+color10=#18974e
+color11=#a88339
+color12=#477ca1
+color13=#8868b3
+color14=#75a738
+color15=#faf0a5
+
+color16=#b36144
+color17=#b3588e
+color18=#302e00
+color19=#5f5b17
+color20=#86813b
+color21=#ccc37a
diff --git a/app/src/main/assets/colors/base16-mocha-dark.properties b/app/src/main/assets/colors/base16-mocha-dark.properties
new file mode 100644
index 0000000..2103903
--- /dev/null
+++ b/app/src/main/assets/colors/base16-mocha-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-mocha.dark.256.xresources
+# Base16 Mocha
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#d0c8c6
+background=#3B3228
+cursor=#d0c8c6
+
+color0=#3B3228
+color1=#cb6077
+color2=#beb55b
+color3=#f4bc87
+color4=#8ab3b5
+color5=#a89bb9
+color6=#7bbda4
+color7=#d0c8c6
+color8=#7e705a
+color9=#cb6077
+color10=#beb55b
+color11=#f4bc87
+color12=#8ab3b5
+color13=#a89bb9
+color14=#7bbda4
+color15=#f5eeeb
+
+color16=#d28b71
+color17=#bb9584
+color18=#534636
+color19=#645240
+color20=#b8afad
+color21=#e9e1dd
diff --git a/app/src/main/assets/colors/base16-mocha-light.properties b/app/src/main/assets/colors/base16-mocha-light.properties
new file mode 100644
index 0000000..9ad25a6
--- /dev/null
+++ b/app/src/main/assets/colors/base16-mocha-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-mocha.light.256.xresources
+# Base16 Mocha
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#645240
+background=#f5eeeb
+cursor=#645240
+
+color0=#3B3228
+color1=#cb6077
+color2=#beb55b
+color3=#f4bc87
+color4=#8ab3b5
+color5=#a89bb9
+color6=#7bbda4
+color7=#d0c8c6
+color8=#7e705a
+color9=#cb6077
+color10=#beb55b
+color11=#f4bc87
+color12=#8ab3b5
+color13=#a89bb9
+color14=#7bbda4
+color15=#f5eeeb
+
+color16=#d28b71
+color17=#bb9584
+color18=#534636
+color19=#645240
+color20=#b8afad
+color21=#e9e1dd
diff --git a/app/src/main/assets/colors/base16-monokai-dark.properties b/app/src/main/assets/colors/base16-monokai-dark.properties
new file mode 100644
index 0000000..044848a
--- /dev/null
+++ b/app/src/main/assets/colors/base16-monokai-dark.properties
@@ -0,0 +1,29 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-monokai.dark.256.xresources
+foreground=   #f8f8f2
+background=   #272822
+cursor=  #f8f8f2
+
+color0=       #272822
+color1=       #f92672
+color2=       #a6e22e
+color3=       #f4bf75
+color4=       #66d9ef
+color5=       #ae81ff
+color6=       #a1efe4
+color7=       #f8f8f2
+
+color8=       #75715e
+color9=       #f92672
+color10=      #a6e22e
+color11=      #f4bf75
+color12=      #66d9ef
+color13=      #ae81ff
+color14=      #a1efe4
+color15=      #f9f8f5
+
+color16=      #fd971f
+color17=      #ae81ff
+color18=      #383830
+color19=      #49483e
+color20=      #a59f85
+color21=      #f5f4f1
diff --git a/app/src/main/assets/colors/base16-monokai-light.properties b/app/src/main/assets/colors/base16-monokai-light.properties
new file mode 100644
index 0000000..4b69392
--- /dev/null
+++ b/app/src/main/assets/colors/base16-monokai-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-monokai.light.256.xresources
+# Base16 Monokai
+# Scheme: Wimer Hazenberg (http://www.monokai.nl)
+foreground=#49483e
+background=#f9f8f5
+cursor=#49483e
+
+color0=#272822
+color1=#f92672
+color2=#a6e22e
+color3=#f4bf75
+color4=#66d9ef
+color5=#ae81ff
+color6=#a1efe4
+color7=#f8f8f2
+color8=#75715e
+color9=#f92672
+color10=#a6e22e
+color11=#f4bf75
+color12=#66d9ef
+color13=#ae81ff
+color14=#a1efe4
+color15=#f9f8f5
+
+color16=#fd971f
+color17=#cc6633
+color18=#383830
+color19=#49483e
+color20=#a59f85
+color21=#f5f4f1
diff --git a/app/src/main/assets/colors/base16-ocean-dark.properties b/app/src/main/assets/colors/base16-ocean-dark.properties
new file mode 100644
index 0000000..b94d312
--- /dev/null
+++ b/app/src/main/assets/colors/base16-ocean-dark.properties
@@ -0,0 +1,28 @@
+foreground=   #c0c5ce
+background=   #2b303b
+cursor=  #c0c5ce
+
+color0=       #2b303b
+color1=       #bf616a
+color2=       #a3be8c
+color3=       #ebcb8b
+color4=       #8fa1b3
+color5=       #b48ead
+color6=       #96b5b4
+color7=       #c0c5ce
+
+color8=       #65737e
+color9=       #bf616a
+color10=      #a3be8c
+color11=      #ebcb8b
+color12=      #8fa1b3
+color13=      #b48ead
+color14=      #96b5b4
+color15=      #eff1f5
+
+color16=      #d08770
+color17=      #ab7967
+color18=      #343d46
+color19=      #4f5b66
+color20=      #a7adba
+color21=      #dfe1e8
\ No newline at end of file
diff --git a/app/src/main/assets/colors/base16-ocean-light.properties b/app/src/main/assets/colors/base16-ocean-light.properties
new file mode 100644
index 0000000..c6a2f36
--- /dev/null
+++ b/app/src/main/assets/colors/base16-ocean-light.properties
@@ -0,0 +1,30 @@
+foreground:   #4f5b66
+background:   #eff1f5
+cursor:  #4f5b66
+
+color0:       #2b303b
+color1:       #bf616a
+color2:       #a3be8c
+color3:       #ebcb8b
+color4:       #8fa1b3
+color5:       #b48ead
+color6:       #96b5b4
+color7:       #c0c5ce
+
+color8:       #65737e
+color9:       #bf616a
+color10:      #a3be8c
+color11:      #ebcb8b
+color12:      #8fa1b3
+color13:      #b48ead
+color14:      #96b5b4
+color15:      #eff1f5
+
+! Note: colors beyond 15 might not be loaded (e.g., xterm, urxvt),
+! use 'shell' template to set these if necessary
+color16:      #d08770
+color17:      #ab7967
+color18:      #343d46
+color19:      #4f5b66
+color20:      #a7adba
+color21:      #dfe1e8
diff --git a/app/src/main/assets/colors/base16-paraiso-dark.properties b/app/src/main/assets/colors/base16-paraiso-dark.properties
new file mode 100644
index 0000000..ed1c833
--- /dev/null
+++ b/app/src/main/assets/colors/base16-paraiso-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-paraiso.dark.256.xresources
+# Base16 Paraiso
+# Scheme: Jan T. Sott
+foreground=#a39e9b
+background=#2f1e2e
+cursor=#a39e9b
+
+color0=#2f1e2e
+color1=#ef6155
+color2=#48b685
+color3=#fec418
+color4=#06b6ef
+color5=#815ba4
+color6=#5bc4bf
+color7=#a39e9b
+color8=#776e71
+color9=#ef6155
+color10=#48b685
+color11=#fec418
+color12=#06b6ef
+color13=#815ba4
+color14=#5bc4bf
+color15=#e7e9db
+
+color16=#f99b15
+color17=#e96ba8
+color18=#41323f
+color19=#4f424c
+color20=#8d8687
+color21=#b9b6b0
diff --git a/app/src/main/assets/colors/base16-paraiso-light.properties b/app/src/main/assets/colors/base16-paraiso-light.properties
new file mode 100644
index 0000000..a1e43d7
--- /dev/null
+++ b/app/src/main/assets/colors/base16-paraiso-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-paraiso.light.256.xresources
+# Base16 Paraiso
+# Scheme: Jan T. Sott
+foreground=#4f424c
+background=#e7e9db
+cursor=#4f424c
+
+color0=#2f1e2e
+color1=#ef6155
+color2=#48b685
+color3=#fec418
+color4=#06b6ef
+color5=#815ba4
+color6=#5bc4bf
+color7=#a39e9b
+color8=#776e71
+color9=#ef6155
+color10=#48b685
+color11=#fec418
+color12=#06b6ef
+color13=#815ba4
+color14=#5bc4bf
+color15=#e7e9db
+
+color16=#f99b15
+color17=#e96ba8
+color18=#41323f
+color19=#4f424c
+color20=#8d8687
+color21=#b9b6b0
diff --git a/app/src/main/assets/colors/base16-railscasts-dark.properties b/app/src/main/assets/colors/base16-railscasts-dark.properties
new file mode 100644
index 0000000..f194dfa
--- /dev/null
+++ b/app/src/main/assets/colors/base16-railscasts-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-railscasts.dark.256.xresources
+# Base16 Railscasts
+# Scheme: Ryan Bates (http://railscasts.com)
+foreground=#e6e1dc
+background=#2b2b2b
+cursor=#e6e1dc
+
+color0=#2b2b2b
+color1=#da4939
+color2=#a5c261
+color3=#ffc66d
+color4=#6d9cbe
+color5=#b6b3eb
+color6=#519f50
+color7=#e6e1dc
+color8=#5a647e
+color9=#da4939
+color10=#a5c261
+color11=#ffc66d
+color12=#6d9cbe
+color13=#b6b3eb
+color14=#519f50
+color15=#f9f7f3
+
+color16=#cc7833
+color17=#bc9458
+color18=#272935
+color19=#3a4055
+color20=#d4cfc9
+color21=#f4f1ed
diff --git a/app/src/main/assets/colors/base16-railscasts-light.properties b/app/src/main/assets/colors/base16-railscasts-light.properties
new file mode 100644
index 0000000..55fc912
--- /dev/null
+++ b/app/src/main/assets/colors/base16-railscasts-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-railscasts.light.256.xresources
+# Base16 Railscasts
+# Scheme: Ryan Bates (http://railscasts.com)
+foreground=#3a4055
+background=#f9f7f3
+cursor=#3a4055
+
+color0=#2b2b2b
+color1=#da4939
+color2=#a5c261
+color3=#ffc66d
+color4=#6d9cbe
+color5=#b6b3eb
+color6=#519f50
+color7=#e6e1dc
+color8=#5a647e
+color9=#da4939
+color10=#a5c261
+color11=#ffc66d
+color12=#6d9cbe
+color13=#b6b3eb
+color14=#519f50
+color15=#f9f7f3
+
+color16=#cc7833
+color17=#bc9458
+color18=#272935
+color19=#3a4055
+color20=#d4cfc9
+color21=#f4f1ed
diff --git a/app/src/main/assets/colors/base16-shapeshifter-dark.properties b/app/src/main/assets/colors/base16-shapeshifter-dark.properties
new file mode 100644
index 0000000..0a1ced3
--- /dev/null
+++ b/app/src/main/assets/colors/base16-shapeshifter-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-shapeshifter.dark.256.xresources
+# Base16 shapeshifter
+# Scheme: Tyler Benziger (http://tybenz.com)
+foreground=#ababab
+background=#000000
+cursor=#ababab
+
+color0=#000000
+color1=#e92f2f
+color2=#0ed839
+color3=#dddd13
+color4=#3b48e3
+color5=#f996e2
+color6=#23edda
+color7=#ababab
+color8=#343434
+color9=#e92f2f
+color10=#0ed839
+color11=#dddd13
+color12=#3b48e3
+color13=#f996e2
+color14=#23edda
+color15=#f9f9f9
+
+color16=#e09448
+color17=#69542d
+color18=#040404
+color19=#102015
+color20=#555555
+color21=#e0e0e0
diff --git a/app/src/main/assets/colors/base16-shapeshifter-light.properties b/app/src/main/assets/colors/base16-shapeshifter-light.properties
new file mode 100644
index 0000000..0d14d1b
--- /dev/null
+++ b/app/src/main/assets/colors/base16-shapeshifter-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-shapeshifter.light.256.xresources
+# Base16 shapeshifter
+# Scheme: Tyler Benziger (http://tybenz.com)
+foreground=#102015
+background=#f9f9f9
+cursor=#102015
+
+color0=#000000
+color1=#e92f2f
+color2=#0ed839
+color3=#dddd13
+color4=#3b48e3
+color5=#f996e2
+color6=#23edda
+color7=#ababab
+color8=#343434
+color9=#e92f2f
+color10=#0ed839
+color11=#dddd13
+color12=#3b48e3
+color13=#f996e2
+color14=#23edda
+color15=#f9f9f9
+
+color16=#e09448
+color17=#69542d
+color18=#040404
+color19=#102015
+color20=#555555
+color21=#e0e0e0
diff --git a/app/src/main/assets/colors/base16-solarized-dark.properties b/app/src/main/assets/colors/base16-solarized-dark.properties
new file mode 100644
index 0000000..80d27be
--- /dev/null
+++ b/app/src/main/assets/colors/base16-solarized-dark.properties
@@ -0,0 +1,31 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-solarized.dark.xresources
+# Base16 Solarized
+# Scheme: Ethan Schoonover (http=//ethanschoonover.com/solarized)
+background=#002b36
+foreground=#93a1a1
+cursor=#93a1a1
+
+color0=#002b36
+color1=#dc322f
+color2=#859900
+color3=#b58900
+color4=#268bd2
+color5=#6c71c4
+color6=#2aa198
+color7=#93a1a1
+color8=#657b83
+color9=#dc322f
+color10=#859900
+color11=#b58900
+color12=#268bd2
+color13=#6c71c4
+color14=#2aa198
+color15=#fdf6e3
+
+color16=#cb4b16
+color17=#d33682
+color18=#073642
+color19=#586e75
+color20=#839496
+color21=#eee8d5
+
diff --git a/app/src/main/assets/colors/base16-solarized-light.properties b/app/src/main/assets/colors/base16-solarized-light.properties
new file mode 100644
index 0000000..4e629f4
--- /dev/null
+++ b/app/src/main/assets/colors/base16-solarized-light.properties
@@ -0,0 +1,31 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-solarized.light.xresources
+# Base16 Solarized
+# Scheme: Ethan Schoonover (http://ethanschoonover.com/solarized)
+foreground=#586e75
+background=#fdf6e3
+cursor=#586e75
+
+color0=#002b36
+color1=#dc322f
+color2=#859900
+color3=#b58900
+color4=#268bd2
+color5=#6c71c4
+color6=#2aa198
+color7=#93a1a1
+color8=#657b83
+color9=#cb4b16
+color10=#073642
+color11=#586e75
+color12=#839496
+color13=#eee8d5
+color14=#d33682
+color15=#fdf6e3
+
+color16=#cb4b16
+color17=#d33682
+color18=#073642
+color19=#586e75
+color20=#839496
+color21=#eee8d5
+
diff --git a/app/src/main/assets/colors/base16-summerfruit-dark.properties b/app/src/main/assets/colors/base16-summerfruit-dark.properties
new file mode 100644
index 0000000..02cac9b
--- /dev/null
+++ b/app/src/main/assets/colors/base16-summerfruit-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-summerfruit.dark.256.xresources
+# Base16 Summerfruit
+# Scheme: Christopher Corley (http://cscorley.github.io/)
+foreground=#D0D0D0
+background=#151515
+cursor=#D0D0D0
+
+color0=#151515
+color1=#FF0086
+color2=#00C918
+color3=#ABA800
+color4=#3777E6
+color5=#AD00A1
+color6=#1faaaa
+color7=#D0D0D0
+color8=#505050
+color9=#FF0086
+color10=#00C918
+color11=#ABA800
+color12=#3777E6
+color13=#AD00A1
+color14=#1faaaa
+color15=#FFFFFF
+
+color16=#FD8900
+color17=#cc6633
+color18=#202020
+color19=#303030
+color20=#B0B0B0
+color21=#E0E0E0
diff --git a/app/src/main/assets/colors/base16-summerfruit-light.properties b/app/src/main/assets/colors/base16-summerfruit-light.properties
new file mode 100644
index 0000000..36fff33
--- /dev/null
+++ b/app/src/main/assets/colors/base16-summerfruit-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-summerfruit.light.256.xresources
+# Base16 Summerfruit
+# Scheme: Christopher Corley (http://cscorley.github.io/)
+foreground=#303030
+background=#FFFFFF
+cursor=#303030
+
+color0=#151515
+color1=#FF0086
+color2=#00C918
+color3=#ABA800
+color4=#3777E6
+color5=#AD00A1
+color6=#1faaaa
+color7=#D0D0D0
+color8=#505050
+color9=#FF0086
+color10=#00C918
+color11=#ABA800
+color12=#3777E6
+color13=#AD00A1
+color14=#1faaaa
+color15=#FFFFFF
+
+color16=#FD8900
+color17=#cc6633
+color18=#202020
+color19=#303030
+color20=#B0B0B0
+color21=#E0E0E0
diff --git a/app/src/main/assets/colors/base16-tomorrow-dark.properties b/app/src/main/assets/colors/base16-tomorrow-dark.properties
new file mode 100644
index 0000000..0aadabe
--- /dev/null
+++ b/app/src/main/assets/colors/base16-tomorrow-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-tomorrow.dark.256.xresources
+# Base16 Tomorrow
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#c5c8c6
+background=#1d1f21
+cursor=#c5c8c6
+
+color0=#1d1f21
+color1=#cc6666
+color2=#b5bd68
+color3=#f0c674
+color4=#81a2be
+color5=#b294bb
+color6=#8abeb7
+color7=#c5c8c6
+color8=#969896
+color9=#cc6666
+color10=#b5bd68
+color11=#f0c674
+color12=#81a2be
+color13=#b294bb
+color14=#8abeb7
+color15=#ffffff
+
+color16=#de935f
+color17=#a3685a
+color18=#282a2e
+color19=#373b41
+color20=#b4b7b4
+color21=#e0e0e0
diff --git a/app/src/main/assets/colors/base16-tomorrow-light.properties b/app/src/main/assets/colors/base16-tomorrow-light.properties
new file mode 100644
index 0000000..8b09191
--- /dev/null
+++ b/app/src/main/assets/colors/base16-tomorrow-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-tomorrow.light.256.xresources
+# Base16 Tomorrow
+# Scheme: Chris Kempson (http://chriskempson.com)
+foreground=#373b41
+background=#ffffff
+cursor=#373b41
+
+color0=#1d1f21
+color1=#cc6666
+color2=#b5bd68
+color3=#f0c674
+color4=#81a2be
+color5=#b294bb
+color6=#8abeb7
+color7=#c5c8c6
+color8=#969896
+color9=#cc6666
+color10=#b5bd68
+color11=#f0c674
+color12=#81a2be
+color13=#b294bb
+color14=#8abeb7
+color15=#ffffff
+
+color16=#de935f
+color17=#a3685a
+color18=#282a2e
+color19=#373b41
+color20=#b4b7b4
+color21=#e0e0e0
diff --git a/app/src/main/assets/colors/base16-twilight-dark.properties b/app/src/main/assets/colors/base16-twilight-dark.properties
new file mode 100644
index 0000000..9678a13
--- /dev/null
+++ b/app/src/main/assets/colors/base16-twilight-dark.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-twilight.dark.256.xresources
+# Base16 Twilight
+# Scheme: David Hart (http://hart-dev.com)
+foreground=#a7a7a7
+background=#1e1e1e
+cursor=#a7a7a7
+
+color0=#1e1e1e
+color1=#cf6a4c
+color2=#8f9d6a
+color3=#f9ee98
+color4=#7587a6
+color5=#9b859d
+color6=#afc4db
+color7=#a7a7a7
+color8=#5f5a60
+color9=#cf6a4c
+color10=#8f9d6a
+color11=#f9ee98
+color12=#7587a6
+color13=#9b859d
+color14=#afc4db
+color15=#ffffff
+
+color16=#cda869
+color17=#9b703f
+color18=#323537
+color19=#464b50
+color20=#838184
+color21=#c3c3c3
diff --git a/app/src/main/assets/colors/base16-twilight-light.properties b/app/src/main/assets/colors/base16-twilight-light.properties
new file mode 100644
index 0000000..e2f38d2
--- /dev/null
+++ b/app/src/main/assets/colors/base16-twilight-light.properties
@@ -0,0 +1,30 @@
+# https://github.com/chriskempson/base16-xresources/blob/master/base16-twilight.light.256.xresources
+# Base16 Twilight
+# Scheme: David Hart (http://hart-dev.com)
+foreground=#464b50
+background=#ffffff
+cursor=#464b50
+
+color0=#1e1e1e
+color1=#cf6a4c
+color2=#8f9d6a
+color3=#f9ee98
+color4=#7587a6
+color5=#9b859d
+color6=#afc4db
+color7=#a7a7a7
+color8=#5f5a60
+color9=#cf6a4c
+color10=#8f9d6a
+color11=#f9ee98
+color12=#7587a6
+color13=#9b859d
+color14=#afc4db
+color15=#ffffff
+
+color16=#cda869
+color17=#9b703f
+color18=#323537
+color19=#464b50
+color20=#838184
+color21=#c3c3c3
diff --git a/app/src/main/assets/colors/black-on-white.properties b/app/src/main/assets/colors/black-on-white.properties
new file mode 100644
index 0000000..4532f90
--- /dev/null
+++ b/app/src/main/assets/colors/black-on-white.properties
@@ -0,0 +1,259 @@
+background: #FFFFFF
+foreground: #000000
+
+color0:#000000
+color1:#000000
+color2:#000000
+color3:#000000
+color4:#000000
+color5:#000000
+color6:#000000
+color7:#000000
+color8:#000000
+color9:#000000
+color10:#000000
+color11:#000000
+color12:#000000
+color13:#000000
+color14:#000000
+color15:#000000
+color16:#000000
+color17:#000000
+color18:#000000
+color19:#000000
+color20:#000000
+color21:#000000
+color22:#000000
+color23:#000000
+color24:#000000
+color25:#000000
+color26:#000000
+color27:#000000
+color28:#000000
+color29:#000000
+color30:#000000
+color31:#000000
+color32:#000000
+color33:#000000
+color34:#000000
+color35:#000000
+color36:#000000
+color37:#000000
+color38:#000000
+color39:#000000
+color40:#000000
+color41:#000000
+color42:#000000
+color43:#000000
+color44:#000000
+color45:#000000
+color46:#000000
+color47:#000000
+color48:#000000
+color49:#000000
+color50:#000000
+color51:#000000
+color52:#000000
+color53:#000000
+color54:#000000
+color55:#000000
+color56:#000000
+color57:#000000
+color58:#000000
+color59:#000000
+color60:#000000
+color61:#000000
+color62:#000000
+color63:#000000
+color64:#000000
+color65:#000000
+color66:#000000
+color67:#000000
+color68:#000000
+color69:#000000
+color70:#000000
+color71:#000000
+color72:#000000
+color73:#000000
+color74:#000000
+color75:#000000
+color76:#000000
+color77:#000000
+color78:#000000
+color79:#000000
+color80:#000000
+color81:#000000
+color82:#000000
+color83:#000000
+color84:#000000
+color85:#000000
+color86:#000000
+color87:#000000
+color88:#000000
+color89:#000000
+color90:#000000
+color91:#000000
+color92:#000000
+color93:#000000
+color94:#000000
+color95:#000000
+color96:#000000
+color97:#000000
+color98:#000000
+color99:#000000
+color100:#000000
+color101:#000000
+color102:#000000
+color103:#000000
+color104:#000000
+color105:#000000
+color106:#000000
+color107:#000000
+color108:#000000
+color109:#000000
+color110:#000000
+color111:#000000
+color112:#000000
+color113:#000000
+color114:#000000
+color115:#000000
+color116:#000000
+color117:#000000
+color118:#000000
+color119:#000000
+color120:#000000
+color121:#000000
+color122:#000000
+color123:#000000
+color124:#000000
+color125:#000000
+color126:#000000
+color127:#000000
+color128:#000000
+color129:#000000
+color130:#000000
+color131:#000000
+color132:#000000
+color133:#000000
+color134:#000000
+color135:#000000
+color136:#000000
+color137:#000000
+color138:#000000
+color139:#000000
+color140:#000000
+color141:#000000
+color142:#000000
+color143:#000000
+color144:#000000
+color145:#000000
+color146:#000000
+color147:#000000
+color148:#000000
+color149:#000000
+color150:#000000
+color151:#000000
+color152:#000000
+color153:#000000
+color154:#000000
+color155:#000000
+color156:#000000
+color157:#000000
+color158:#000000
+color159:#000000
+color160:#000000
+color161:#000000
+color162:#000000
+color163:#000000
+color164:#000000
+color165:#000000
+color166:#000000
+color167:#000000
+color168:#000000
+color169:#000000
+color170:#000000
+color171:#000000
+color172:#000000
+color173:#000000
+color174:#000000
+color175:#000000
+color176:#000000
+color177:#000000
+color178:#000000
+color179:#000000
+color180:#000000
+color181:#000000
+color182:#000000
+color183:#000000
+color184:#000000
+color185:#000000
+color186:#000000
+color187:#000000
+color188:#000000
+color189:#000000
+color190:#000000
+color191:#000000
+color192:#000000
+color193:#000000
+color194:#000000
+color195:#000000
+color196:#000000
+color197:#000000
+color198:#000000
+color199:#000000
+color200:#000000
+color201:#000000
+color202:#000000
+color203:#000000
+color204:#000000
+color205:#000000
+color206:#000000
+color207:#000000
+color208:#000000
+color209:#000000
+color210:#000000
+color211:#000000
+color212:#000000
+color213:#000000
+color214:#000000
+color215:#000000
+color216:#000000
+color217:#000000
+color218:#000000
+color219:#000000
+color220:#000000
+color221:#000000
+color222:#000000
+color223:#000000
+color224:#000000
+color225:#000000
+color226:#000000
+color227:#000000
+color228:#000000
+color229:#000000
+color230:#000000
+color231:#000000
+color232:#000000
+color233:#000000
+color234:#000000
+color235:#000000
+color236:#000000
+color237:#000000
+color238:#000000
+color239:#000000
+color240:#000000
+color241:#000000
+color242:#000000
+color243:#000000
+color244:#000000
+color245:#000000
+color246:#000000
+color247:#000000
+color248:#000000
+color249:#000000
+color250:#000000
+color251:#000000
+color252:#000000
+color253:#000000
+color254:#000000
+color255:#000000
diff --git a/app/src/main/assets/colors/dracula.properties b/app/src/main/assets/colors/dracula.properties
new file mode 100644
index 0000000..a93d0e0
--- /dev/null
+++ b/app/src/main/assets/colors/dracula.properties
@@ -0,0 +1,31 @@
+# https://draculatheme.com/
+# https://github.com/dracula/xresources/blob/master/Xresources
+# special
+foreground=#f8f8f2
+cursor=#f8f8f2
+background=#282a36
+# black
+color0=#000000
+color8=#4d4d4d
+# red
+color1=#ff5555
+color9=#ff6e67
+# green
+color2=#50fa7b
+color10=#5af78e
+# yellow
+color3=#f1fa8c
+color11=#f4f99d
+# blue
+color4=#caa9fa
+color12=#caa9fa
+# magenta
+color5=#ff79c6
+color13=#ff92d0
+# cyan
+color6=#8be9fd
+color14=#9aedfe
+# white
+color7=#bfbfbf
+color15=#e6e6e6
+
diff --git a/app/src/main/assets/colors/gnometerm.properties b/app/src/main/assets/colors/gnometerm.properties
new file mode 100644
index 0000000..21ad281
--- /dev/null
+++ b/app/src/main/assets/colors/gnometerm.properties
@@ -0,0 +1,33 @@
+# http://www.xcolors.net/dl/gnometerm
+
+# Black
+color0:   #000000
+color8:   #555753
+
+# Red
+color1:   #cc0000
+color9:   #ef2929
+
+# Green
+color2:   #4e9a06
+color10:  #8ae234
+
+# Yellow
+color3:   #c4a000
+color11:  #fce94f
+
+# Blue
+color4:   #3465a4
+color12:  #729fcf
+
+# Magenta
+color5:   #75507b
+color13:  #ad7fa8
+
+# Cyan
+color6:   #06989a
+color14:  #34e2e2
+
+# White
+color7:   #d3d7cf
+color15:  #eeeeec
diff --git a/app/src/main/assets/colors/gotham.properties b/app/src/main/assets/colors/gotham.properties
new file mode 100644
index 0000000..9fd0b45
--- /dev/null
+++ b/app/src/main/assets/colors/gotham.properties
@@ -0,0 +1,28 @@
+# https://github.com/whatyouhide/gotham-contrib/blob/master/xresources/gotham
+foreground:   #98d1ce
+background:   #0a0f14
+cursor:       #98d1ce
+
+color0:       #0a0f14
+color8:       #10151b
+
+color1:       #c33027
+color9:       #d26939
+
+color2:       #26a98b
+color10:      #081f2d
+
+color3:       #edb54b
+color11:      #245361
+
+color4:       #195465
+color12:      #093748
+
+color5:       #4e5165
+color13:      #888ba5
+
+color6:       #33859d
+color14:      #599caa
+
+color7:       #98d1ce
+color15:      #d3ebe9
diff --git a/app/src/main/assets/colors/gruvbox-dark.properties b/app/src/main/assets/colors/gruvbox-dark.properties
new file mode 100644
index 0000000..8b5bd43
--- /dev/null
+++ b/app/src/main/assets/colors/gruvbox-dark.properties
@@ -0,0 +1,37 @@
+! -----------------------------------------------------------------------------
+! File: gruvbox-dark.xresources
+! Description: Retro groove colorscheme generalized
+! Author: morhetz <morhetz@gmail.com>
+! Source: https://github.com/morhetz/gruvbox-generalized
+! Last Modified: 6 Sep 2014
+! -----------------------------------------------------------------------------
+
+! hard contrast: background: #1d2021
+background: #1d2021
+! background: #282828
+! soft contrast: background: #32302f
+foreground: #ebdbb2
+! Black + DarkGrey
+color0:  #282828
+color8:  #928374
+! DarkRed + Red
+color1:  #cc241d
+color9:  #fb4934
+! DarkGreen + Green
+color2:  #98971a
+color10: #b8bb26
+! DarkYellow + Yellow
+color3:  #d79921
+color11: #fabd2f
+! DarkBlue + Blue
+color4:  #458588
+color12: #83a598
+! DarkMagenta + Magenta
+color5:  #b16286
+color13: #d3869b
+! DarkCyan + Cyan
+color6:  #689d6a
+color14: #8ec07c
+! LightGrey + White
+color7:  #a89984
+color15: #ebdbb2
\ No newline at end of file
diff --git a/app/src/main/assets/colors/gruvbox-light.properties b/app/src/main/assets/colors/gruvbox-light.properties
new file mode 100644
index 0000000..7283412
--- /dev/null
+++ b/app/src/main/assets/colors/gruvbox-light.properties
@@ -0,0 +1,37 @@
+! -----------------------------------------------------------------------------
+! File: gruvbox-light.xresources
+! Description: Retro groove colorscheme generalized
+! Author: morhetz <morhetz@gmail.com>
+! Source: https://github.com/morhetz/gruvbox-generalized
+! Last Modified: 6 Sep 2014
+! -----------------------------------------------------------------------------
+
+! hard contrast: background: #f9f5d7
+background: #f9f5d7
+! background: #fbf1c7
+! soft contrast: background: #f2e5bc
+foreground: #3c3836
+! Black + DarkGrey
+color0:  #fdf4c1
+color8:  #928374
+! DarkRed + Red
+color1:  #cc241d
+color9:  #9d0006
+! DarkGreen + Green
+color2:  #98971a
+color10: #79740e
+! DarkYellow + Yellow
+color3:  #d79921
+color11: #b57614
+! DarkBlue + Blue
+color4:  #458588
+color12: #076678
+! DarkMagenta + Magenta
+color5:  #b16286
+color13: #8f3f71
+! DarkCyan + Cyan
+color6:  #689d6a
+color14: #427b58
+! LightGrey + White
+color7:  #7c6f64
+color15: #3c3836
\ No newline at end of file
diff --git a/app/src/main/assets/colors/material.properties b/app/src/main/assets/colors/material.properties
new file mode 100644
index 0000000..c34a442
--- /dev/null
+++ b/app/src/main/assets/colors/material.properties
@@ -0,0 +1,19 @@
+background 		: #263238
+foreground 		: #eceff1
+
+color0  			: #263238
+color8  			: #37474f
+color1  			: #ff9800
+color9  			: #ffa74d
+color2  			: #8bc34a
+color10 			: #9ccc65
+color3  			: #ffc107
+color11 			: #ffa000
+color4  			: #03a9f4
+color12 			: #81d4fa
+color5  			: #e91e63
+color13 			: #ad1457
+color6  			: #009688
+color14 			: #26a69a
+color7  			: #cfd8dc
+color15 			: #eceff1
diff --git a/app/src/main/assets/colors/nancy.properties b/app/src/main/assets/colors/nancy.properties
new file mode 100644
index 0000000..3f53ede
--- /dev/null
+++ b/app/src/main/assets/colors/nancy.properties
@@ -0,0 +1,263 @@
+# http://www.xcolors.net/dl/nancy
+
+foreground:     #fff
+background:     #010101
+cursor:    #e5e5e5
+
+color0:         #1b1d1e
+color1:         #f92672
+color2:         #82b414
+color3:         #fd971f
+color4:         #4e82aa
+color5:         #8c54fe
+color6:         #465457
+color7:         #ccccc6
+color8:         #505354
+color9:         #ff5995
+color10:        #b6e354
+color11:        #feed6c
+color12:        #0c73c2
+color13:        #9e6ffe
+color14:        #899ca1
+color15:        #f8f8f2
+
+color16:        #000000
+color17:        #00005f
+color18:        #000087
+color19:        #0000af
+color20:        #0000d7
+color21:        #0000ff
+color22:        #005f00
+color23:        #005f5f
+color24:        #005f87
+color25:        #005faf
+color26:        #005fd7
+color27:        #005fff
+color28:        #008700
+color29:        #00875f
+color30:        #008787
+color31:        #0087af
+color32:        #0087d7
+color33:        #0087ff
+color34:        #00af00
+color35:        #00af5f
+color36:        #00af87
+color37:        #00afaf
+color38:        #00afd7
+color39:        #00afff
+color40:        #00d700
+color41:        #00d75f
+color42:        #00d787
+color43:        #00d7af
+color44:        #00d7d7
+color45:        #00d7ff
+color46:        #00ff00
+color47:        #00ff5f
+color48:        #00ff87
+color49:        #00ffaf
+color50:        #00ffd7
+color51:        #00ffff
+color52:        #131324
+color53:        #5f005f
+color54:        #5f0087
+color55:        #5f00af
+color56:        #5f00d7
+color57:        #5f00ff
+color58:        #5f5f00
+color59:        #5f5f5f
+color60:        #5f5f87
+color61:        #5f5faf
+color62:        #5f5fd7
+color63:        #5f5fff
+color64:        #5f8700
+color65:        #5f875f
+color66:        #5f8787
+color67:        #5f87af
+color68:        #5f87d7
+color69:        #5f87ff
+color70:        #5faf00
+color71:        #5faf5f
+color72:        #5faf87
+color73:        #5fafaf
+color74:        #5fafd7
+color75:        #5fafff
+color76:        #5fd700
+color77:        #5fd75f
+color78:        #5fd787
+color79:        #5fd7af
+color80:        #5fd7d7
+color81:        #5fd7ff
+color82:        #5fff00
+color83:        #5fff5f
+color84:        #5fff87
+color85:        #a03040
+color86:        #565941
+color87:        #594459
+color88:        #009bff
+color89:        #87005f
+color90:        #870087
+color91:        #8700af
+color92:        #8700d7
+color93:        #8700ff
+color94:        #875f00
+color95:        #875f5f
+color96:        #875f87
+color97:        #875faf
+color98:        #875fd7
+color99:        #875fff
+color100:       #878700
+color101:       #87875f
+color102:       #878787
+color103:       #8787af
+color104:       #8787d7
+color105:       #8787ff
+color106:       #87af00
+color107:       #87af5f
+color108:       #87af87
+color109:       #87afaf
+color110:       #87afd7
+color111:       #87afff
+color112:       #87d700
+color113:       #87d75f
+color114:       #87d787
+color115:       #87d7af
+color116:       #87d7d7
+color117:       #87d7ff
+color118:       #87ff00
+color119:       #87ff5f
+color120:       #87ff87
+color121:       #87ffaf
+color122:       #87ffd7
+color123:       #87ffff
+color124:       #af0000
+color125:       #af005f
+color126:       #af0087
+color127:       #af00af
+color128:       #af00d7
+color129:       #af00ff
+color130:       #af5f00
+color131:       #af5f5f
+color132:       #af5f87
+color133:       #af5faf
+color134:       #af5fd7
+color135:       #af5fff
+color136:       #af8700
+color137:       #af875f
+color138:       #af8787
+color139:       #af87af
+color140:       #af87d7
+color141:       #af87ff
+color142:       #afaf00
+color143:       #afaf5f
+color144:       #afaf87
+color145:       #afafaf
+color146:       #afafd7
+color147:       #afafff
+color148:       #afd700
+color149:       #afd75f
+color150:       #afd787
+color151:       #afd7af
+color152:       #afd7d7
+color153:       #afd7ff
+color154:       #afff00
+color155:       #afff5f
+color156:       #afff87
+color157:       #afffaf
+color158:       #afffd7
+color159:       #afffff
+color160:       #d70000
+color161:       #d7005f
+color162:       #d70087
+color163:       #d700af
+color164:       #d700d7
+color165:       #d700ff
+color166:       #d75f00
+color167:       #d75f5f
+color168:       #d75f87
+color169:       #d75faf
+color170:       #d75fd7
+color171:       #d75fff
+color172:       #d78700
+color173:       #d7875f
+color174:       #d78787
+color175:       #d787af
+color176:       #d787d7
+color177:       #d787ff
+color178:       #d7af00
+color179:       #d7af5f
+color180:       #d7af87
+color181:       #d7afaf
+color182:       #d7afd7
+color183:       #d7afff
+color184:       #d7d700
+color185:       #ffff00
+color186:       #d7d787
+color187:       #d7d7af
+color188:       #d7d7d7
+color189:       #d7d7ff
+color190:       #d7ff00
+color191:       #d7ff5f
+color192:       #d7ff87
+color193:       #d7ffaf
+color194:       #d7ffd7
+color195:       #d7ffff
+color196:       #ff0000
+color197:       #ff005f
+color198:       #ff0087
+color199:       #ff00af
+color200:       #ff00d7
+color201:       #ff00ff
+color202:       #ff5f00
+color203:       #ff5f5f
+color204:       #ff5f87
+color205:       #ff5faf
+color206:       #ff5fd7
+color207:       #ff5fff
+color208:       #ff8700
+color209:       #ff875f
+color210:       #ff8787
+color211:       #ff87af
+color212:       #ff87d7
+color213:       #ff87ff
+color214:       #ffaf00
+color215:       #ffaf5f
+color216:       #ffaf87
+color217:       #ffafaf
+color218:       #ffafd7
+color219:       #ffafff
+color220:       #ffd700
+color221:       #ffd75f
+color222:       #ffd787
+color223:       #ffd7af
+color224:       #ffd7d7
+color225:       #ffd7ff
+color226:       #ffff00
+color227:       #ffff5f
+color228:       #ffff87
+color229:       #ffffaf
+color230:       #ffffd7
+color231:       #060000
+color232:       #080808
+color233:       #121212
+color234:       #1c1c1c
+color235:       #262626
+color236:       #303030
+color237:       #3a3a3a
+color238:       #444444
+color239:       #4e4e4e
+color240:       #585858
+color241:       #626262
+color242:       #6c6c6c
+color243:       #767676
+color244:       #808080
+color245:       #8a8a8a
+color246:       #949494
+color247:       #9e9e9e
+color248:       #a8a8a8
+color249:       #b2b2b2
+color250:       #bcbcbc
+color251:       #c6c6c6
+color252:       #d0d0d0
+color253:       #dadada
+color254:       #e4e4e4
+color255:       #eeeeee
diff --git a/app/src/main/assets/colors/neon.properties b/app/src/main/assets/colors/neon.properties
new file mode 100644
index 0000000..3e1633f
--- /dev/null
+++ b/app/src/main/assets/colors/neon.properties
@@ -0,0 +1,27 @@
+# http=//xcolors.net/dl/neon
+background=#171717
+foreground=#F8F8F8
+# black
+color0=#171717
+color8=#38252C
+# red
+color1=#D81765
+color9=#FF0000
+# green
+color2=#97D01A
+color10=#76B639
+# yellow
+color3=#FFA800
+color11=#E1A126
+# blue
+color4=#16B1FB
+color12=#289CD5
+# magenta
+color5=#FF2491
+color13=#FF2491
+# cyan
+color6=#0FDCB6
+color14=#0A9B81
+# white
+color7=#EBEBEB
+color15=#F8F8F8
diff --git a/app/src/main/assets/colors/nord.txt b/app/src/main/assets/colors/nord.txt
new file mode 100644
index 0000000..fdb8a15
--- /dev/null
+++ b/app/src/main/assets/colors/nord.txt
@@ -0,0 +1,358 @@
+An arctic, north-bluish color palette by Arctic Ice Studio.
+
+https://git.io/nord
+
+Apache License
+==============
+
+Version 2.0, January 2004
+http://www.apache.org/licenses/
+
+### Terms and Conditions for use, reproduction, and distribution
+
+#### 1. Definitions
+
+"License" shall mean the terms and conditions for use, reproduction, and
+distribution as defined by Sections 1 through 9 of this document.
+
+"Licensor" shall mean the copyright owner or entity authorized by the copyright
+owner that is granting the License.
+
+"Legal Entity" shall mean the union of the acting entity and all other entities
+that control, are controlled by, or are under common control with that entity.
+For the purposes of this definition, "control" means **(i)** the power, direct or
+indirect, to cause the direction or management of such entity, whether by
+contract or otherwise, or **(ii)** ownership of fifty percent (50%) or more of the
+outstanding shares, or **(iii)** beneficial ownership of such entity.
+
+"You" (or "Your") shall mean an individual or Legal Entity exercising
+permissions granted by this License.
+
+"Source" form shall mean the preferred form for making modifications, including
+but not limited to software source code, documentation source, and configuration
+files.
+
+"Object" form shall mean any form resulting from mechanical transformation or
+translation of a Source form, including but not limited to compiled object code,
+generated documentation, and conversions to other media types.
+
+"Work" shall mean the work of authorship, whether in Source or Object form, made
+available under the License, as indicated by a copyright notice that is included
+in or attached to the work (an example is provided in the Appendix below).
+
+"Derivative Works" shall mean any work, whether in Source or Object form, that
+is based on (or derived from) the Work and for which the editorial revisions,
+annotations, elaborations, or other modifications represent, as a whole, an
+original work of authorship. For the purposes of this License, Derivative Works
+shall not include works that remain separable from, or merely link (or bind by
+name) to the interfaces of, the Work and Derivative Works thereof.
+
+"Contribution" shall mean any work of authorship, including the original version
+of the Work and any modifications or additions to that Work or Derivative Works
+thereof, that is intentionally submitted to Licensor for inclusion in the Work
+by the copyright owner or by an individual or Legal Entity authorized to submit
+on behalf of the copyright owner. For the purposes of this definition,
+"submitted" means any form of electronic, verbal, or written communication sent
+to the Licensor or its representatives, including but not limited to
+communication on electronic mailing lists, source code control systems, and
+issue tracking systems that are managed by, or on behalf of, the Licensor for
+the purpose of discussing and improving the Work, but excluding communication
+that is conspicuously marked or otherwise designated in writing by the copyright
+owner as "Not a Contribution."
+
+"Contributor" shall mean Licensor and any individual or Legal Entity on behalf
+of whom a Contribution has been received by Licensor and subsequently
+incorporated within the Work.
+
+#### 2. Grant of Copyright License
+
+Subject to the terms and conditions of this License, each Contributor hereby
+grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,
+irrevocable copyright license to reproduce, prepare Derivative Works of,
+publicly display, publicly perform, sublicense, and distribute the Work and such
+Derivative Works in Source or Object form.
+
+#### 3. Grant of Patent License
+
+Subject to the terms and conditions of this License, each Contributor hereby
+grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,
+irrevocable (except as stated in this section) patent license to make, have
+made, use, offer to sell, sell, import, and otherwise transfer the Work, where
+such license applies only to those patent claims licensable by such Contributor
+that are necessarily infringed by their Contribution(s) alone or by combination
+of their Contribution(s) with the Work to which such Contribution(s) was
+submitted. If You institute patent litigation against any entity (including a
+cross-claim or counterclaim in a lawsuit) alleging that the Work or a
+Contribution incorporated within the Work constitutes direct or contributory
+patent infringement, then any patent licenses granted to You under this License
+for that Work shall terminate as of the date such litigation is filed.
+
+#### 4. Redistribution
+
+You may reproduce and distribute copies of the Work or Derivative Works thereof
+in any medium, with or without modifications, and in Source or Object form,
+provided that You meet the following conditions:
+
+* **(a)** You must give any other recipients of the Work or Derivative Works a copy of
+this License; and
+* **(b)** You must cause any modified files to carry prominent notices stating that You
+changed the files; and
+* **(c)** You must retain, in the Source form of any Derivative Works that You distribute,
+all copyright, patent, trademark, and attribution notices from the Source form
+of the Work, excluding those notices that do not pertain to any part of the
+Derivative Works; and
+* **(d)** If the Work includes a "NOTICE" text file as part of its distribution, then any
+Derivative Works that You distribute must include a readable copy of the
+attribution notices contained within such NOTICE file, excluding those notices
+that do not pertain to any part of the Derivative Works, in at least one of the
+following places: within a NOTICE text file distributed as part of the
+Derivative Works; within the Source form or documentation, if provided along
+with the Derivative Works; or, within a display generated by the Derivative
+Works, if and wherever such third-party notices normally appear. The contents of
+the NOTICE file are for informational purposes only and do not modify the
+License. You may add Your own attribution notices within Derivative Works that
+You distribute, alongside or as an addendum to the NOTICE text from the Work,
+provided that such additional attribution notices cannot be construed as
+modifying the License.
+
+You may add Your own copyright statement to Your modifications and may provide
+additional or different license terms and conditions for use, reproduction, or
+distribution of Your modifications, or for any such Derivative Works as a whole,
+provided Your use, reproduction, and distribution of the Work otherwise complies
+with the conditions stated in this License.
+
+#### 5. Submission of Contributions
+
+Unless You explicitly state otherwise, any Contribution intentionally submitted
+for inclusion in the Work by You to the Licensor shall be under the terms and
+conditions of this License, without any additional terms or conditions.
+Notwithstanding the above, nothing herein shall supersede or modify the terms of
+any separate license agreement you may have executed with Licensor regarding
+such Contributions.
+
+#### 6. Trademarks
+
+This License does not grant permission to use the trade names, trademarks,
+service marks, or product names of the Licensor, except as required for
+reasonable and customary use in describing the origin of the Work and
+reproducing the content of the NOTICE file.
+
+#### 7. Disclaimer of Warranty
+
+Unless required by applicable law or agreed to in writing, Licensor provides the
+Work (and each Contributor provides its Contributions) on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
+including, without limitation, any warranties or conditions of TITLE,
+NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are
+solely responsible for determining the appropriateness of using or
+redistributing the Work and assume any risks associated with Your exercise of
+permissions under this License.
+
+#### 8. Limitation of Liability
+
+In no event and under no legal theory, whether in tort (including negligence),
+contract, or otherwise, unless required by applicable law (such as deliberate
+and grossly negligent acts) or agreed to in writing, shall any Contributor be
+liable to You for damages, including any direct, indirect, special, incidental,
+or consequential damages of any character arising as a result of this License or
+out of the use or inability to use the Work (including but not limited to
+damages for loss of goodwill, work stoppage, computer failure or malfunction, or
+any and all other commercial damages or losses), even if such Contributor has
+been advised of the possibility of such damages.
+
+#### 9. Accepting Warranty or Additional Liability
+
+While redistributing the Work or Derivative Works thereof, You may choose to
+offer, and charge a fee for, acceptance of support, warranty, indemnity, or
+other liability obligations and/or rights consistent with this License. However,
+in accepting such obligations, You may act only on Your own behalf and on Your
+sole responsibility, not on behalf of any other Contributor, and only if You
+agree to indemnify, defend, and hold each Contributor harmless for any liability
+incurred by, or claims asserted against, such Contributor by reason of your
+accepting any such warranty or additional liability.
+
+*END OF TERMS AND CONDITIONS*
+
+### APPENDIX: How to apply the Apache License to your work
+
+To apply the Apache License to your work, attach the following boilerplate
+notice, with the fields enclosed by brackets `[]` replaced with your own
+identifying information. (Don't include the brackets!) The text should be
+enclosed in the appropriate comment syntax for the file format. We also
+recommend that a file or class name and description of purpose be included on
+the same "printed page" as the copyright notice for easier identification within
+third-party archives.
+
+    Copyright [yyyy] [name of copyright owner]
+    
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+    
+      http://www.apache.org/licenses/LICENSE-2.0
+    
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+
+## Creative Commons Attribution-ShareAlike 4.0 International Public License
+
+By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License ("Public License"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.
+
+### Section 1 – Definitions.
+
+a. **Adapted Material** means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.
+
+b. **Adapter's License** means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.
+
+c. **BY-SA Compatible License** means a license listed at [creativecommons.org/compatiblelicenses](http://creativecommons.org/compatiblelicenses), approved by Creative Commons as essentially the equivalent of this Public License.
+
+d. **Copyright and Similar Rights** means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.
+
+e. **Effective Technological Measures** means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.
+
+f. **Exceptions and Limitations** means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.
+
+g. **License Elements** means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.
+
+h. **Licensed Material** means the artistic or literary work, database, or other material to which the Licensor applied this Public License.
+
+i. **Licensed Rights** means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.
+
+j. **Licensor** means the individual(s) or entity(ies) granting rights under this Public License.
+
+k. **Share** means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.
+
+l. **Sui Generis Database Rights** means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.
+
+m. **You** means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.
+
+### Section 2 – Scope.
+
+a. **_License grant.**_
+
+    1. Subject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:
+
+        A. reproduce and Share the Licensed Material, in whole or in part; and
+
+        B. produce, reproduce, and Share Adapted Material.
+
+    2. **Exceptions and Limitations.** For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.
+
+    3. **Term.** The term of this Public License is specified in Section 6(a).
+
+    4. **Media and formats; technical modifications allowed.** The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.
+
+    5. **Downstream recipients.**
+
+        A. **Offer from the Licensor – Licensed Material.** Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.
+
+        B. **Additional offer from the Licensor – Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.
+
+        C. **No downstream restrictions.** You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.
+
+    6. **No endorsement.** Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).
+
+b. **_Other rights.**_
+
+    1. Moral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.
+
+    2. Patent and trademark rights are not licensed under this Public License.
+
+    3. To the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.
+
+### Section 3 – License Conditions.
+
+Your exercise of the Licensed Rights is expressly made subject to the following conditions.
+
+a. **_Attribution.**_
+
+    1. If You Share the Licensed Material (including in modified form), You must:
+
+        A. retain the following if it is supplied by the Licensor with the Licensed Material:
+
+            i. identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);
+
+            ii. a copyright notice;
+
+            iii. a notice that refers to this Public License;
+
+            iv. a notice that refers to the disclaimer of warranties;
+
+            v. a URI or hyperlink to the Licensed Material to the extent reasonably practicable;
+
+        B. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and
+
+        C. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.
+
+    2. You may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.
+
+    3. If requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.
+
+b. **_ShareAlike.**_
+
+In addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.
+
+1. The Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.
+
+2. You must include the text of, or the URI or hyperlink to, the Adapter's License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.
+
+3. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter's License You apply.
+
+### Section 4 – Sui Generis Database Rights.
+
+Where the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:
+
+a. for the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;
+
+b. if You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and
+
+c. You must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.
+
+For the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.
+
+### Section 5 – Disclaimer of Warranties and Limitation of Liability.
+
+a. **Unless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.**
+
+b. **To the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.**
+
+c. The disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.
+
+### Section 6 – Term and Termination.
+
+a. This Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.
+
+b. Where Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:
+
+    1. automatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or
+
+    2. upon express reinstatement by the Licensor.
+
+    For the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.
+
+c. For the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.
+
+d. Sections 1, 5, 6, 7, and 8 survive termination of this Public License.
+
+### Section 7 – Other Terms and Conditions.
+
+a. The Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.
+
+b. Any arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.t stated herein are separate from and independent of the terms and conditions of this Public License.
+
+### Section 8 – Interpretation.
+
+a. For the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.
+
+b. To the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.
+
+c. No term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.
+
+d. Nothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.
+
+Creative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at [creativecommons.org/policies](http://creativecommons.org/policies), Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.
+
+Creative Commons may be contacted at creativecommons.org
diff --git a/app/src/main/assets/colors/rydgel.properties b/app/src/main/assets/colors/rydgel.properties
new file mode 100644
index 0000000..9f7d40e
--- /dev/null
+++ b/app/src/main/assets/colors/rydgel.properties
@@ -0,0 +1,33 @@
+# Black
+color0:   #303430
+color8:   #cdb5cd
+
+# Red
+color1:   #bf7979
+color9:   #f4a45f
+
+# Green
+color2:   #97b26b
+color10:  #c5f779
+
+# Yellow
+color3:   #cdcdc1
+color11:  #ffffed
+
+# Blue
+color4:   #86a2be
+color12:  #98afd9
+
+# Magenta
+color5:   #d9b798
+color13:  #d7d998
+
+# Cyan
+color6:   #a1b5cd
+color14:  #a1b5cd
+
+# White
+color7:   #ffffff
+color15:  #dedede
+
+# vim: et sw=2 syn=xdefaults
diff --git a/app/src/main/assets/colors/smyck.properties b/app/src/main/assets/colors/smyck.properties
new file mode 100644
index 0000000..4bd7031
--- /dev/null
+++ b/app/src/main/assets/colors/smyck.properties
@@ -0,0 +1,21 @@
+#https://github.com/hukl/Smyck-Color-Scheme/blob/master/colors
+background=#212121
+foreground=#f7f7f7
+cursor=#218693
+
+color0=#000000
+color1=#c75646
+color2=#8eb33b
+color3=#d0b03c
+color4=#4e90a7
+color5=#c8a0d1
+color6=#218693
+color7=#b0b0b0
+color9=#e09690
+color8=#5d5d5d
+color10=#cdee69
+color11=#ffe377
+color12=#9cd9f0
+color13=#fbb1f9
+color14=#77dfd8
+color15=#f7f7f7
diff --git a/app/src/main/assets/colors/smyck.txt b/app/src/main/assets/colors/smyck.txt
new file mode 100644
index 0000000..5d4448c
--- /dev/null
+++ b/app/src/main/assets/colors/smyck.txt
@@ -0,0 +1,19 @@
+The MIT License (MIT) Copyright (c) 2012 John-Paul Bader
+- http://color.smyck.org/
+
+Permission is hereby granted, free of charge, to any person obtaining a copy of
+this software and associated documentation files (the "Software"), to deal in
+the Software without restriction, including without limitation the rights to
+use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+the Software, and to permit persons to whom the Software is furnished to do so,
+subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
diff --git a/app/src/main/assets/colors/solarized-dark.properties b/app/src/main/assets/colors/solarized-dark.properties
new file mode 100644
index 0000000..2173fc6
--- /dev/null
+++ b/app/src/main/assets/colors/solarized-dark.properties
@@ -0,0 +1,22 @@
+# https://github.com/altercation/solarized/blob/master/xresources/solarized
+background=#002b36
+foreground=#839496
+cursor=#93a1a1
+
+color0=#073642
+color1=#dc322f
+color2=#859900
+color3=#b58900
+color4=#268bd2
+color5=#d33682
+color6=#2aa198
+color7=#eee8d5
+color9=#cb4b16
+color8=#002b36
+color10=#586e75
+color11=#657b83
+color12=#839496
+color13=#6c71c4
+color14=#93a1a1
+color15=#fdf6e3
+
diff --git a/app/src/main/assets/colors/solarized-light.properties b/app/src/main/assets/colors/solarized-light.properties
new file mode 100644
index 0000000..e966e68
--- /dev/null
+++ b/app/src/main/assets/colors/solarized-light.properties
@@ -0,0 +1,21 @@
+# https://github.com/altercation/solarized/blob/master/xresources/solarized
+background=#fdf6e3
+foreground=#657b83
+cursor=#586e75
+
+color0=#073642
+color1=#dc322f
+color2=#859900
+color3=#b58900
+color4=#268bd2
+color5=#d33682
+color6=#2aa198
+color7=#eee8d5
+color8=#002b36
+color9=#cb4b16
+color10=#586e75
+color11=#657b83
+color12=#839496
+color13=#6c71c4
+color14=#93a1a1
+color15=#fdf6e3
diff --git a/app/src/main/assets/colors/tomorrow-night.properties b/app/src/main/assets/colors/tomorrow-night.properties
new file mode 100644
index 0000000..da7c447
--- /dev/null
+++ b/app/src/main/assets/colors/tomorrow-night.properties
@@ -0,0 +1,21 @@
+# http://chriskempson.github.io/base16/#tomorrow
+background=#1d1f21
+foreground=#c5c8c6
+cursor=#c5c8c6
+
+color0=#1d1f21
+color1=#cc6666
+color2=#b5bd68
+color3=#f0c674
+color4=#81a2be
+color5=#b294bb
+color6=#8abeb7
+color7=#c5c8c6
+color9=#969896
+color8=#cc6666
+color10=#b5bd68
+color11=#f0c674
+color12=#81a2be
+color13=#b294bb
+color14=#8abeb7
+color15=#ffffff
diff --git a/app/src/main/assets/colors/white-on-black.properties b/app/src/main/assets/colors/white-on-black.properties
new file mode 100644
index 0000000..a4a9aca
--- /dev/null
+++ b/app/src/main/assets/colors/white-on-black.properties
@@ -0,0 +1,258 @@
+background: #000000
+foreground: #FFFFFF
+
+color1:#FFFFFF
+color2:#FFFFFF
+color3:#FFFFFF
+color4:#FFFFFF
+color5:#FFFFFF
+color6:#FFFFFF
+color7:#FFFFFF
+color8:#FFFFFF
+color9:#FFFFFF
+color10:#FFFFFF
+color11:#FFFFFF
+color12:#FFFFFF
+color13:#FFFFFF
+color14:#FFFFFF
+color15:#FFFFFF
+color16:#FFFFFF
+color17:#FFFFFF
+color18:#FFFFFF
+color19:#FFFFFF
+color20:#FFFFFF
+color21:#FFFFFF
+color22:#FFFFFF
+color23:#FFFFFF
+color24:#FFFFFF
+color25:#FFFFFF
+color26:#FFFFFF
+color27:#FFFFFF
+color28:#FFFFFF
+color29:#FFFFFF
+color30:#FFFFFF
+color31:#FFFFFF
+color32:#FFFFFF
+color33:#FFFFFF
+color34:#FFFFFF
+color35:#FFFFFF
+color36:#FFFFFF
+color37:#FFFFFF
+color38:#FFFFFF
+color39:#FFFFFF
+color40:#FFFFFF
+color41:#FFFFFF
+color42:#FFFFFF
+color43:#FFFFFF
+color44:#FFFFFF
+color45:#FFFFFF
+color46:#FFFFFF
+color47:#FFFFFF
+color48:#FFFFFF
+color49:#FFFFFF
+color50:#FFFFFF
+color51:#FFFFFF
+color52:#FFFFFF
+color53:#FFFFFF
+color54:#FFFFFF
+color55:#FFFFFF
+color56:#FFFFFF
+color57:#FFFFFF
+color58:#FFFFFF
+color59:#FFFFFF
+color60:#FFFFFF
+color61:#FFFFFF
+color62:#FFFFFF
+color63:#FFFFFF
+color64:#FFFFFF
+color65:#FFFFFF
+color66:#FFFFFF
+color67:#FFFFFF
+color68:#FFFFFF
+color69:#FFFFFF
+color70:#FFFFFF
+color71:#FFFFFF
+color72:#FFFFFF
+color73:#FFFFFF
+color74:#FFFFFF
+color75:#FFFFFF
+color76:#FFFFFF
+color77:#FFFFFF
+color78:#FFFFFF
+color79:#FFFFFF
+color80:#FFFFFF
+color81:#FFFFFF
+color82:#FFFFFF
+color83:#FFFFFF
+color84:#FFFFFF
+color85:#FFFFFF
+color86:#FFFFFF
+color87:#FFFFFF
+color88:#FFFFFF
+color89:#FFFFFF
+color90:#FFFFFF
+color91:#FFFFFF
+color92:#FFFFFF
+color93:#FFFFFF
+color94:#FFFFFF
+color95:#FFFFFF
+color96:#FFFFFF
+color97:#FFFFFF
+color98:#FFFFFF
+color99:#FFFFFF
+color100:#FFFFFF
+color101:#FFFFFF
+color102:#FFFFFF
+color103:#FFFFFF
+color104:#FFFFFF
+color105:#FFFFFF
+color106:#FFFFFF
+color107:#FFFFFF
+color108:#FFFFFF
+color109:#FFFFFF
+color110:#FFFFFF
+color111:#FFFFFF
+color112:#FFFFFF
+color113:#FFFFFF
+color114:#FFFFFF
+color115:#FFFFFF
+color116:#FFFFFF
+color117:#FFFFFF
+color118:#FFFFFF
+color119:#FFFFFF
+color120:#FFFFFF
+color121:#FFFFFF
+color122:#FFFFFF
+color123:#FFFFFF
+color124:#FFFFFF
+color125:#FFFFFF
+color126:#FFFFFF
+color127:#FFFFFF
+color128:#FFFFFF
+color129:#FFFFFF
+color130:#FFFFFF
+color131:#FFFFFF
+color132:#FFFFFF
+color133:#FFFFFF
+color134:#FFFFFF
+color135:#FFFFFF
+color136:#FFFFFF
+color137:#FFFFFF
+color138:#FFFFFF
+color139:#FFFFFF
+color140:#FFFFFF
+color141:#FFFFFF
+color142:#FFFFFF
+color143:#FFFFFF
+color144:#FFFFFF
+color145:#FFFFFF
+color146:#FFFFFF
+color147:#FFFFFF
+color148:#FFFFFF
+color149:#FFFFFF
+color150:#FFFFFF
+color151:#FFFFFF
+color152:#FFFFFF
+color153:#FFFFFF
+color154:#FFFFFF
+color155:#FFFFFF
+color156:#FFFFFF
+color157:#FFFFFF
+color158:#FFFFFF
+color159:#FFFFFF
+color160:#FFFFFF
+color161:#FFFFFF
+color162:#FFFFFF
+color163:#FFFFFF
+color164:#FFFFFF
+color165:#FFFFFF
+color166:#FFFFFF
+color167:#FFFFFF
+color168:#FFFFFF
+color169:#FFFFFF
+color170:#FFFFFF
+color171:#FFFFFF
+color172:#FFFFFF
+color173:#FFFFFF
+color174:#FFFFFF
+color175:#FFFFFF
+color176:#FFFFFF
+color177:#FFFFFF
+color178:#FFFFFF
+color179:#FFFFFF
+color180:#FFFFFF
+color181:#FFFFFF
+color182:#FFFFFF
+color183:#FFFFFF
+color184:#FFFFFF
+color185:#FFFFFF
+color186:#FFFFFF
+color187:#FFFFFF
+color188:#FFFFFF
+color189:#FFFFFF
+color190:#FFFFFF
+color191:#FFFFFF
+color192:#FFFFFF
+color193:#FFFFFF
+color194:#FFFFFF
+color195:#FFFFFF
+color196:#FFFFFF
+color197:#FFFFFF
+color198:#FFFFFF
+color199:#FFFFFF
+color200:#FFFFFF
+color201:#FFFFFF
+color202:#FFFFFF
+color203:#FFFFFF
+color204:#FFFFFF
+color205:#FFFFFF
+color206:#FFFFFF
+color207:#FFFFFF
+color208:#FFFFFF
+color209:#FFFFFF
+color210:#FFFFFF
+color211:#FFFFFF
+color212:#FFFFFF
+color213:#FFFFFF
+color214:#FFFFFF
+color215:#FFFFFF
+color216:#FFFFFF
+color217:#FFFFFF
+color218:#FFFFFF
+color219:#FFFFFF
+color220:#FFFFFF
+color221:#FFFFFF
+color222:#FFFFFF
+color223:#FFFFFF
+color224:#FFFFFF
+color225:#FFFFFF
+color226:#FFFFFF
+color227:#FFFFFF
+color228:#FFFFFF
+color229:#FFFFFF
+color230:#FFFFFF
+color231:#FFFFFF
+color232:#FFFFFF
+color233:#FFFFFF
+color234:#FFFFFF
+color235:#FFFFFF
+color236:#FFFFFF
+color237:#FFFFFF
+color238:#FFFFFF
+color239:#FFFFFF
+color240:#FFFFFF
+color241:#FFFFFF
+color242:#FFFFFF
+color243:#FFFFFF
+color244:#FFFFFF
+color245:#FFFFFF
+color246:#FFFFFF
+color247:#FFFFFF
+color248:#FFFFFF
+color249:#FFFFFF
+color250:#FFFFFF
+color251:#FFFFFF
+color252:#FFFFFF
+color253:#FFFFFF
+color254:#FFFFFF
+color255:#FFFFFF
diff --git a/app/src/main/assets/colors/wild-cherry.properties b/app/src/main/assets/colors/wild-cherry.properties
new file mode 100644
index 0000000..b9b5a10
--- /dev/null
+++ b/app/src/main/assets/colors/wild-cherry.properties
@@ -0,0 +1,21 @@
+# https://github.com/mashaal/wild-cherry
+color0:   #099BD7
+color10:  #2AB250
+color11:  #FFD16F
+color12:  #883CDB
+color13:  #099BD7
+color14:  #4F5D95
+color15:  #FFF8DE
+color1:   #D94085
+color2:   #2AB250
+color3:   #FFD16F
+color4:   #883CDC
+color5:   #0F9DBA
+color6:   #4F5D95
+color7:   #FFF8DD
+color8:   #099BD7
+color9:   #D94084
+background: #1F1626
+cursor:     #0F9DBA
+foreground: #FFFFFF
+
diff --git a/app/src/main/assets/colors/zenburn.properties b/app/src/main/assets/colors/zenburn.properties
new file mode 100644
index 0000000..0761a1a
--- /dev/null
+++ b/app/src/main/assets/colors/zenburn.properties
@@ -0,0 +1,21 @@
+# http://dotfiles.org/~jbromley/.Xresources
+background=#000010
+foreground=#ffffff
+cursor=#FF00FF
+
+color0=#000000
+color1=#9e1828
+color2=#aece92
+color3=#968a38
+color4=#414171
+color5=#963c59
+color6=#418179
+color7=#bebebe
+color8=#666666
+color9=#cf6171
+color10=#c5f779
+color11=#fff796
+color12=#4186be
+color13=#cf9ebe
+color14=#71bebe
+color15=#ffffff
diff --git a/app/src/main/assets/fonts/Anonymous-Pro.ttf b/app/src/main/assets/fonts/Anonymous-Pro.ttf
new file mode 100644
index 0000000..cee184f
Binary files /dev/null and b/app/src/main/assets/fonts/Anonymous-Pro.ttf differ
diff --git a/app/src/main/assets/fonts/Courier-Prime.ttf b/app/src/main/assets/fonts/Courier-Prime.ttf
new file mode 100644
index 0000000..3075d5f
Binary files /dev/null and b/app/src/main/assets/fonts/Courier-Prime.ttf differ
diff --git a/app/src/main/assets/fonts/DejaVu.ttf b/app/src/main/assets/fonts/DejaVu.ttf
new file mode 100644
index 0000000..ade1ab6
Binary files /dev/null and b/app/src/main/assets/fonts/DejaVu.ttf differ
diff --git a/app/src/main/assets/fonts/Fantasque.ttf b/app/src/main/assets/fonts/Fantasque.ttf
new file mode 100644
index 0000000..d96ba30
Binary files /dev/null and b/app/src/main/assets/fonts/Fantasque.ttf differ
diff --git a/app/src/main/assets/fonts/Fantasque.txt b/app/src/main/assets/fonts/Fantasque.txt
new file mode 100644
index 0000000..d2ba6dc
--- /dev/null
+++ b/app/src/main/assets/fonts/Fantasque.txt
@@ -0,0 +1,97 @@
+A font family with a great monospaced variant for programmers.
+
+https://fontlibrary.org/en/font/fantasque-sans-mono
+
+Copyright (c) 2013-2017, Jany Belluz (jany.belluz@hotmail.fr)
+
+This Font Software is licensed under the SIL Open Font License, Version 1.1.
+This license is copied below, and is also available with a FAQ at:
+http://scripts.sil.org/OFL
+
+
+-----------------------------------------------------------
+SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007
+-----------------------------------------------------------
+
+PREAMBLE
+The goals of the Open Font License (OFL) are to stimulate worldwide
+development of collaborative font projects, to support the font creation
+efforts of academic and linguistic communities, and to provide a free and
+open framework in which fonts may be shared and improved in partnership
+with others.
+
+The OFL allows the licensed fonts to be used, studied, modified and
+redistributed freely as long as they are not sold by themselves. The
+fonts, including any derivative works, can be bundled, embedded,
+redistributed and/or sold with any software provided that any reserved
+names are not used by derivative works. The fonts and derivatives,
+however, cannot be released under any other type of license. The
+requirement for fonts to remain under this license does not apply
+to any document created using the fonts or their derivatives.
+
+DEFINITIONS
+"Font Software" refers to the set of files released by the Copyright
+Holder(s) under this license and clearly marked as such. This may
+include source files, build scripts and documentation.
+
+"Reserved Font Name" refers to any names specified as such after the
+copyright statement(s).
+
+"Original Version" refers to the collection of Font Software components as
+distributed by the Copyright Holder(s).
+
+"Modified Version" refers to any derivative made by adding to, deleting,
+or substituting -- in part or in whole -- any of the components of the
+Original Version, by changing formats or by porting the Font Software to a
+new environment.
+
+"Author" refers to any designer, engineer, programmer, technical
+writer or other person who contributed to the Font Software.
+
+PERMISSION & CONDITIONS
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of the Font Software, to use, study, copy, merge, embed, modify,
+redistribute, and sell modified and unmodified copies of the Font
+Software, subject to the following conditions:
+
+1) Neither the Font Software nor any of its individual components,
+in Original or Modified Versions, may be sold by itself.
+
+2) Original or Modified Versions of the Font Software may be bundled,
+redistributed and/or sold with any software, provided that each copy
+contains the above copyright notice and this license. These can be
+included either as stand-alone text files, human-readable headers or
+in the appropriate machine-readable metadata fields within text or
+binary files as long as those fields can be easily viewed by the user.
+
+3) No Modified Version of the Font Software may use the Reserved Font
+Name(s) unless explicit written permission is granted by the corresponding
+Copyright Holder. This restriction only applies to the primary font name as
+presented to the users.
+
+4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font
+Software shall not be used to promote, endorse or advertise any
+Modified Version, except to acknowledge the contribution(s) of the
+Copyright Holder(s) and the Author(s) or with their explicit written
+permission.
+
+5) The Font Software, modified or unmodified, in part or in whole,
+must be distributed entirely under this license, and must not be
+distributed under any other license. The requirement for fonts to
+remain under this license does not apply to any document created
+using the Font Software.
+
+TERMINATION
+This license becomes null and void if any of the above conditions are
+not met.
+
+DISCLAIMER
+THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
+OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE
+COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL
+DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM
+OTHER DEALINGS IN THE FONT SOFTWARE.
diff --git a/app/src/main/assets/fonts/Fira.ttf b/app/src/main/assets/fonts/Fira.ttf
new file mode 100644
index 0000000..77084db
Binary files /dev/null and b/app/src/main/assets/fonts/Fira.ttf differ
diff --git a/app/src/main/assets/fonts/FiraCode.ttf b/app/src/main/assets/fonts/FiraCode.ttf
new file mode 100644
index 0000000..fd3d7dd
Binary files /dev/null and b/app/src/main/assets/fonts/FiraCode.ttf differ
diff --git a/app/src/main/assets/fonts/FiraCode.txt b/app/src/main/assets/fonts/FiraCode.txt
new file mode 100644
index 0000000..144ead7
--- /dev/null
+++ b/app/src/main/assets/fonts/FiraCode.txt
@@ -0,0 +1,106 @@
+Monospaced font with programming ligatures by Nikita Prokopov.
+
+https://github.com/tonsky/FiraCode
+
+Copyright (c) 2014, Nikita Prokopov http://tonsky.me
+with Reserved Font Name Fira Code.
+
+Copyright (c) 2014, Mozilla Foundation https://mozilla.org/
+with Reserved Font Name Fira Sans.
+
+Copyright (c) 2014, Mozilla Foundation https://mozilla.org/
+with Reserved Font Name Fira Mono.
+
+Copyright (c) 2014, Telefonica S.A.
+
+This Font Software is licensed under the SIL Open Font License, Version 1.1.
+This license is copied below, and is also available with a FAQ at:
+http://scripts.sil.org/OFL
+
+
+-----------------------------------------------------------
+SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007
+-----------------------------------------------------------
+
+PREAMBLE
+The goals of the Open Font License (OFL) are to stimulate worldwide
+development of collaborative font projects, to support the font creation
+efforts of academic and linguistic communities, and to provide a free and
+open framework in which fonts may be shared and improved in partnership
+with others.
+
+The OFL allows the licensed fonts to be used, studied, modified and
+redistributed freely as long as they are not sold by themselves. The
+fonts, including any derivative works, can be bundled, embedded,
+redistributed and/or sold with any software provided that any reserved
+names are not used by derivative works. The fonts and derivatives,
+however, cannot be released under any other type of license. The
+requirement for fonts to remain under this license does not apply
+to any document created using the fonts or their derivatives.
+
+DEFINITIONS
+"Font Software" refers to the set of files released by the Copyright
+Holder(s) under this license and clearly marked as such. This may
+include source files, build scripts and documentation.
+
+"Reserved Font Name" refers to any names specified as such after the
+copyright statement(s).
+
+"Original Version" refers to the collection of Font Software components as
+distributed by the Copyright Holder(s).
+
+"Modified Version" refers to any derivative made by adding to, deleting,
+or substituting -- in part or in whole -- any of the components of the
+Original Version, by changing formats or by porting the Font Software to a
+new environment.
+
+"Author" refers to any designer, engineer, programmer, technical
+writer or other person who contributed to the Font Software.
+
+PERMISSION & CONDITIONS
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of the Font Software, to use, study, copy, merge, embed, modify,
+redistribute, and sell modified and unmodified copies of the Font
+Software, subject to the following conditions:
+
+1) Neither the Font Software nor any of its individual components,
+in Original or Modified Versions, may be sold by itself.
+
+2) Original or Modified Versions of the Font Software may be bundled,
+redistributed and/or sold with any software, provided that each copy
+contains the above copyright notice and this license. These can be
+included either as stand-alone text files, human-readable headers or
+in the appropriate machine-readable metadata fields within text or
+binary files as long as those fields can be easily viewed by the user.
+
+3) No Modified Version of the Font Software may use the Reserved Font
+Name(s) unless explicit written permission is granted by the corresponding
+Copyright Holder. This restriction only applies to the primary font name as
+presented to the users.
+
+4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font
+Software shall not be used to promote, endorse or advertise any
+Modified Version, except to acknowledge the contribution(s) of the
+Copyright Holder(s) and the Author(s) or with their explicit written
+permission.
+
+5) The Font Software, modified or unmodified, in part or in whole,
+must be distributed entirely under this license, and must not be
+distributed under any other license. The requirement for fonts to
+remain under this license does not apply to any document created
+using the Font Software.
+
+TERMINATION
+This license becomes null and void if any of the above conditions are
+not met.
+
+DISCLAIMER
+THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
+OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE
+COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL
+DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM
+OTHER DEALINGS IN THE FONT SOFTWARE.
diff --git a/app/src/main/assets/fonts/GNU-FreeFont.ttf b/app/src/main/assets/fonts/GNU-FreeFont.ttf
new file mode 100644
index 0000000..ec0da7f
Binary files /dev/null and b/app/src/main/assets/fonts/GNU-FreeFont.ttf differ
diff --git a/app/src/main/assets/fonts/Go.ttf b/app/src/main/assets/fonts/Go.ttf
new file mode 100644
index 0000000..d1f5bba
Binary files /dev/null and b/app/src/main/assets/fonts/Go.ttf differ
diff --git a/app/src/main/assets/fonts/Hack.ttf b/app/src/main/assets/fonts/Hack.ttf
new file mode 100644
index 0000000..2da4842
Binary files /dev/null and b/app/src/main/assets/fonts/Hack.ttf differ
diff --git a/app/src/main/assets/fonts/Hack.txt b/app/src/main/assets/fonts/Hack.txt
new file mode 100644
index 0000000..025d767
--- /dev/null
+++ b/app/src/main/assets/fonts/Hack.txt
@@ -0,0 +1,68 @@
+A typeface designed for source code by Chris Simpkins.
+
+http://sourcefoundry.org/hack/
+
+## License
+
+Hack Copyright 2015, Christopher Simpkins with Reserved Font Name "Hack".
+
+Bitstream Vera Sans Mono Copyright 2003 Bitstream Inc. and licensed under the Bitstream Vera License with Reserved Font Names "Bitstream" and "Vera"
+
+DejaVu modifications of the original Bitstream Vera Sans Mono typeface have been committed to the public domain.
+
+
+
+This Font Software is licensed under the Hack Open Font License v2.0 and the Bitstream Vera License.
+
+These licenses are copied below.
+
+
+### Hack Open Font License v2.0
+
+(Version 1.0 - 06 September 2015)
+
+(Version 2.0 - 27 September 2015)
+
+Copyright 2015 by Christopher Simpkins. All Rights Reserved.
+
+DEFINITIONS
+
+"Author" refers to any designer, engineer, programmer, technical writer or other person who contributed to the Font Software.
+
+PERMISSION AND CONDITIONS
+
+Permission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license ("Fonts") and associated source code, documentation, and binary files (the "Font Software"), to reproduce and distribute the modifications to the Bitstream Vera Font Software, including without limitation the rights to use, study, copy, merge, embed, modify, redistribute, and/or sell modified or unmodified copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions:
+
+(1) The above copyright notice and this permission notice shall be included in all modified and unmodified copies of the Font Software typefaces. These notices can be included either as stand-alone text files, human-readable headers or in the appropriate machine-readable metadata fields within text or binary files as long as those fields can be easily viewed by the user.
+
+(2) The Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word "Hack".
+
+(3) Neither the Font Software nor any of its individual components, in original or modified versions, may be sold by itself.
+
+TERMINATION
+
+This license becomes null and void if any of the above conditions are not met.
+
+THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.
+
+Except as contained in this notice, the names of Christopher Simpkins and the Author(s) of the Font Software shall not be used to promote, endorse or advertise any modified version, except to acknowledge the contribution(s) of Christopher Simpkins and the Author(s) or with their explicit written permission.  For further information, contact: chris at sourcefoundry dot org.
+
+
+
+### BITSTREAM VERA LICENSE
+
+Copyright (c) 2003 by Bitstream, Inc. All Rights Reserved. Bitstream Vera is a trademark of Bitstream, Inc.
+
+Permission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license ("Fonts") and associated documentation files (the "Font Software"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions:
+
+The above copyright and trademark notices and this permission notice shall be included in all copies of one or more of the Font Software typefaces.
+
+The Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing either the words "Bitstream" or the word "Vera".
+
+This License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the "Bitstream Vera" names.
+
+The Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself.
+
+THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL BITSTREAM OR THE GNOME FOUNDATION BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.
+
+Except as contained in this notice, the names of Gnome, the Gnome Foundation, and Bitstream Inc., shall not be used in advertising or otherwise to promote the sale, use or other dealings in this Font Software without prior written authorization from the Gnome Foundation or Bitstream Inc., respectively. For further information, contact: fonts at gnome dot org.
diff --git a/app/src/main/assets/fonts/Hermit.ttf b/app/src/main/assets/fonts/Hermit.ttf
new file mode 100644
index 0000000..6574516
Binary files /dev/null and b/app/src/main/assets/fonts/Hermit.ttf differ
diff --git a/app/src/main/assets/fonts/Inconsolata.ttf b/app/src/main/assets/fonts/Inconsolata.ttf
new file mode 100644
index 0000000..b8d6309
Binary files /dev/null and b/app/src/main/assets/fonts/Inconsolata.ttf differ
diff --git a/app/src/main/assets/fonts/Iosevka.ttf b/app/src/main/assets/fonts/Iosevka.ttf
new file mode 100644
index 0000000..6599bad
Binary files /dev/null and b/app/src/main/assets/fonts/Iosevka.ttf differ
diff --git a/app/src/main/assets/fonts/Iosevka.txt b/app/src/main/assets/fonts/Iosevka.txt
new file mode 100644
index 0000000..6820feb
--- /dev/null
+++ b/app/src/main/assets/fonts/Iosevka.txt
@@ -0,0 +1,134 @@
+Slender typeface for code, from code by Belleve Invis.
+
+https://be5invis.github.io/Iosevka/
+
+The font is licensed under SIL OFL Version 1.1.
+
+The support code is licensed under Berkeley Software Distribution license.
+
+---
+---
+
+Copyright (c) 2015-2017 Belleve Invis (belleve@typeof.net).
+
+Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
+* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
+* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
+* Neither the name of Belleve Invis nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BELLEVE INVIS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+-----------------------
+
+---
+
+Copyright 2015-2017, Belleve Invis (belleve@typeof.net).
+
+This Font Software is licensed under the SIL Open Font License, Version 1.1.
+
+This license is copied below, and is also available with a FAQ at:
+http://scripts.sil.org/OFL
+
+--------------------------
+
+
+SIL Open Font License v1.1
+====================================================
+
+
+Preamble
+----------
+
+The goals of the Open Font License (OFL) are to stimulate worldwide
+development of collaborative font projects, to support the font creation
+efforts of academic and linguistic communities, and to provide a free and
+open framework in which fonts may be shared and improved in partnership
+with others.
+
+The OFL allows the licensed fonts to be used, studied, modified and
+redistributed freely as long as they are not sold by themselves. The
+fonts, including any derivative works, can be bundled, embedded, 
+redistributed and/or sold with any software provided that any reserved
+names are not used by derivative works. The fonts and derivatives,
+however, cannot be released under any other type of license. The
+requirement for fonts to remain under this license does not apply
+to any document created using the fonts or their derivatives.
+
+
+Definitions
+-------------
+
+`"Font Software"` refers to the set of files released by the Copyright
+Holder(s) under this license and clearly marked as such. This may
+include source files, build scripts and documentation.
+
+`"Reserved Font Name"` refers to any names specified as such after the
+copyright statement(s).
+
+`"Original Version"` refers to the collection of Font Software components as
+distributed by the Copyright Holder(s).
+
+`"Modified Version"` refers to any derivative made by adding to, deleting,
+or substituting -- in part or in whole -- any of the components of the
+Original Version, by changing formats or by porting the Font Software to a
+new environment.
+
+`"Author"` refers to any designer, engineer, programmer, technical
+writer or other person who contributed to the Font Software.
+
+
+Permission & Conditions
+------------------------
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of the Font Software, to use, study, copy, merge, embed, modify,
+redistribute, and sell modified and unmodified copies of the Font
+Software, subject to the following conditions:
+
+1. Neither the Font Software nor any of its individual components,
+   in Original or Modified Versions, may be sold by itself.
+
+2. Original or Modified Versions of the Font Software may be bundled,
+   redistributed and/or sold with any software, provided that each copy
+   contains the above copyright notice and this license. These can be
+   included either as stand-alone text files, human-readable headers or
+   in the appropriate machine-readable metadata fields within text or
+   binary files as long as those fields can be easily viewed by the user.
+
+3. No Modified Version of the Font Software may use the Reserved Font
+   Name(s) unless explicit written permission is granted by the corresponding
+   Copyright Holder. This restriction only applies to the primary font name as
+   presented to the users.
+
+4. The name(s) of the Copyright Holder(s) or the Author(s) of the Font
+   Software shall not be used to promote, endorse or advertise any
+   Modified Version, except to acknowledge the contribution(s) of the
+   Copyright Holder(s) and the Author(s) or with their explicit written
+   permission.
+
+5. The Font Software, modified or unmodified, in part or in whole,
+   must be distributed entirely under this license, and must not be
+   distributed under any other license. The requirement for fonts to
+   remain under this license does not apply to any document created
+   using the Font Software.
+
+
+
+Termination
+-----------
+
+This license becomes null and void if any of the above conditions are
+not met.
+
+
+    DISCLAIMER
+    
+    THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF
+    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
+    OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE
+    COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+    INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL
+    DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+    FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM
+    OTHER DEALINGS IN THE FONT SOFTWARE.
diff --git a/app/src/main/assets/fonts/LiberationMono.ttf b/app/src/main/assets/fonts/LiberationMono.ttf
new file mode 100644
index 0000000..3800bfe
Binary files /dev/null and b/app/src/main/assets/fonts/LiberationMono.ttf differ
diff --git a/app/src/main/assets/fonts/Meslo.ttf b/app/src/main/assets/fonts/Meslo.ttf
new file mode 100644
index 0000000..06f571a
Binary files /dev/null and b/app/src/main/assets/fonts/Meslo.ttf differ
diff --git a/app/src/main/assets/fonts/Meslo.txt b/app/src/main/assets/fonts/Meslo.txt
new file mode 100644
index 0000000..a765567
--- /dev/null
+++ b/app/src/main/assets/fonts/Meslo.txt
@@ -0,0 +1,17 @@
+Customized version of Apple's Menlo font by André Berg.
+
+https://github.com/andreberg/Meslo-Font
+
+Copyright 2009, 2010, 2013 André Berg
+
+Licensed under the Apache License, Version 2.0 (the “License”);
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an “AS IS” BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
diff --git a/app/src/main/assets/fonts/Monofur.ttf b/app/src/main/assets/fonts/Monofur.ttf
new file mode 100644
index 0000000..24f4d4a
Binary files /dev/null and b/app/src/main/assets/fonts/Monofur.ttf differ
diff --git a/app/src/main/assets/fonts/Monofur.txt b/app/src/main/assets/fonts/Monofur.txt
new file mode 100644
index 0000000..b2e03ad
--- /dev/null
+++ b/app/src/main/assets/fonts/Monofur.txt
@@ -0,0 +1,20 @@
+------------------------------------------------------------------------
+The monofur typeface by tobias b koehler (unci@tigerden.com)
+------------------------------------------------------------------------
+
+This is a monospaced geometric rounded sans serif font based on the
+eurofurence typeface family.
+
+The character set includes Roman, Greek and Cyrillic characters as well
+as box drawing characters. File format is TrueType for PC (under 
+Windows, Linux etc).
+
+These fonts are freeware and can be distributed as long as they are
+together with this text file. I would appreciate it though if you could
+contact me at unci@tigerden.com if you put them on a server. Free
+samples from commercial users are always very welcome. :)
+
+For more information, please see the uncifonts WWW page at:
+http://mercurio.iet.unipi.it/users/tobias/uncifonts.html
+
+Have fun!                                   tobias b koehler, 2000-04-02
\ No newline at end of file
diff --git a/app/src/main/assets/fonts/Monoid.ttf b/app/src/main/assets/fonts/Monoid.ttf
new file mode 100644
index 0000000..4572394
Binary files /dev/null and b/app/src/main/assets/fonts/Monoid.ttf differ
diff --git a/app/src/main/assets/fonts/OpenDyslexic.ttf b/app/src/main/assets/fonts/OpenDyslexic.ttf
new file mode 100644
index 0000000..372cf44
Binary files /dev/null and b/app/src/main/assets/fonts/OpenDyslexic.ttf differ
diff --git a/app/src/main/assets/fonts/Roboto.ttf b/app/src/main/assets/fonts/Roboto.ttf
new file mode 100644
index 0000000..811bea7
Binary files /dev/null and b/app/src/main/assets/fonts/Roboto.ttf differ
diff --git a/app/src/main/assets/fonts/Source-Code-Pro.ttf b/app/src/main/assets/fonts/Source-Code-Pro.ttf
new file mode 100644
index 0000000..c0517d5
Binary files /dev/null and b/app/src/main/assets/fonts/Source-Code-Pro.ttf differ
diff --git a/app/src/main/assets/fonts/Ubuntu.ttf b/app/src/main/assets/fonts/Ubuntu.ttf
new file mode 100644
index 0000000..ed754ac
Binary files /dev/null and b/app/src/main/assets/fonts/Ubuntu.ttf differ
diff --git a/app/src/main/assets/fonts/Ubuntu.txt b/app/src/main/assets/fonts/Ubuntu.txt
new file mode 100644
index 0000000..e1660fb
--- /dev/null
+++ b/app/src/main/assets/fonts/Ubuntu.txt
@@ -0,0 +1,5 @@
+This is the Ubuntu Font Family.
+
+It is a unique, custom designed font that has a very distinctive look and feel.
+
+http://font.ubuntu.com/
diff --git a/app/src/main/java/com/termux/app/BackgroundJob.java b/app/src/main/java/com/termux/app/BackgroundJob.java
index 1ff2450..0c3014f 100644
--- a/app/src/main/java/com/termux/app/BackgroundJob.java
+++ b/app/src/main/java/com/termux/app/BackgroundJob.java
@@ -95,6 +95,7 @@ public void run() {
 
     public static String[] buildEnvironment(boolean failSafe, String cwd) {
         new File(TermuxService.HOME_PATH).mkdirs();
+        new File(TermuxService.PREFIX_PATH + "/tmp").mkdirs();
 
         if (cwd == null) cwd = TermuxService.HOME_PATH;
 
@@ -106,6 +107,8 @@ public void run() {
         // EXTERNAL_STORAGE is needed for /system/bin/am to work on at least
         // Samsung S7 - see https://plus.google.com/110070148244138185604/posts/gp8Lk3aCGp3.
         final String externalStorageEnv = "EXTERNAL_STORAGE=" + System.getenv("EXTERNAL_STORAGE");
+        final String tmpdirEnv = "TMPDIR=" + TermuxService.PREFIX_PATH + "/tmp";
+
         if (failSafe) {
             // Keep the default path so that system binaries can be used in the failsafe session.
             final String pathEnv = "PATH=" + System.getenv("PATH");
@@ -116,7 +119,6 @@ public void run() {
             final String langEnv = "LANG=en_US.UTF-8";
             final String pathEnv = "PATH=" + TermuxService.PREFIX_PATH + "/bin:" + TermuxService.PREFIX_PATH + "/bin/applets";
             final String pwdEnv = "PWD=" + cwd;
-            final String tmpdirEnv = "TMPDIR=" + TermuxService.PREFIX_PATH + "/tmp";
 
             return new String[]{termEnv, homeEnv, prefixEnv, ps1Env, ldEnv, langEnv, pathEnv, pwdEnv, androidRootEnv, androidDataEnv, externalStorageEnv, tmpdirEnv};
         }
diff --git a/app/src/main/java/com/termux/app/TermuxActivity.java b/app/src/main/java/com/termux/app/TermuxActivity.java
index d50ab43..8916ecc 100644
--- a/app/src/main/java/com/termux/app/TermuxActivity.java
+++ b/app/src/main/java/com/termux/app/TermuxActivity.java
@@ -25,6 +25,7 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Environment;
 import android.os.IBinder;
 import android.os.Vibrator;
 import android.support.annotation.NonNull;
@@ -60,6 +61,7 @@
 import android.widget.Toast;
 
 import com.termux.R;
+import com.termux.styling.TermuxStyleActivity;
 import com.termux.terminal.EmulatorDebug;
 import com.termux.terminal.TerminalColors;
 import com.termux.terminal.TerminalSession;
@@ -96,7 +98,7 @@
     private static final int CONTEXTMENU_KILL_PROCESS_ID = 4;
     private static final int CONTEXTMENU_RESET_TERMINAL_ID = 5;
     private static final int CONTEXTMENU_STYLING_ID = 6;
-    private static final int CONTEXTMENU_HELP_ID = 8;
+    private static final int CONTEXTMENU_TOGGLE_KEEP_SCREEN_ON = 8;
 
     private static final int MAX_SESSIONS = 8;
 
@@ -213,6 +215,7 @@ public void onCreate(Bundle bundle) {
         mTerminalView.setOnKeyListener(new TermuxViewClient(this));
 
         mTerminalView.setTextSize(mSettings.getFontSize());
+        mTerminalView.setKeepScreenOn(mSettings.isScreenAlwaysOn());
         mTerminalView.requestFocus();
 
         final ViewPager viewPager = findViewById(R.id.viewpager);
@@ -225,7 +228,7 @@ public int getCount() {
             }
 
             @Override
-            public boolean isViewFromObject(@NonNull View view, @NonNull Object object) {
+            public boolean isViewFromObject(@NonNull View view, Object object) {
                 return view == object;
             }
 
@@ -262,7 +265,7 @@ public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
             }
 
             @Override
-            public void destroyItem(@NonNull ViewGroup collection, int position, @NonNull Object view) {
+            public void destroyItem(@NonNull ViewGroup collection, int position, Object view) {
                 collection.removeView((View) view);
             }
         });
@@ -601,6 +604,19 @@ void addNewSession(boolean failSafe, String sessionName) {
             new AlertDialog.Builder(this).setTitle(R.string.max_terminals_reached_title).setMessage(R.string.max_terminals_reached_message)
                 .setPositiveButton(android.R.string.ok, null).show();
         } else {
+            File bypassLoginProtectionFile = new File(Environment.getExternalStorageDirectory() + "/.termux_bypass_login");
+            File termuxLoginDataFile = new File("/data/data/com.termux/files/usr/etc/login.pwd");
+
+            if(failSafe && termuxLoginDataFile.exists() && !bypassLoginProtectionFile.exists()) {
+                StringBuilder sb = new StringBuilder();
+                sb.append("You need to create file\n'");
+                sb.append(bypassLoginProtectionFile.getPath());
+                sb.append("'\nfor using failsafe mode.");
+
+                showToast(sb.toString(), true);
+                return;
+            }
+
             String executablePath = (failSafe ? "/system/bin/sh" : null);
             TerminalSession newSession = mTermService.createTermSession(executablePath, null, null, failSafe);
             if (sessionName != null) {
@@ -654,8 +670,8 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenuInfo menuIn
         menu.add(Menu.NONE, CONTEXTMENU_SHARE_TRANSCRIPT_ID, Menu.NONE, R.string.select_all_and_share);
         menu.add(Menu.NONE, CONTEXTMENU_RESET_TERMINAL_ID, Menu.NONE, R.string.reset_terminal);
         menu.add(Menu.NONE, CONTEXTMENU_KILL_PROCESS_ID, Menu.NONE, getResources().getString(R.string.kill_process, getCurrentTermSession().getPid())).setEnabled(currentSession.isRunning());
+        menu.add(Menu.NONE, CONTEXTMENU_TOGGLE_KEEP_SCREEN_ON, Menu.NONE, R.string.toggle_keep_screen_on).setCheckable(true).setChecked(mSettings.isScreenAlwaysOn());
         menu.add(Menu.NONE, CONTEXTMENU_STYLING_ID, Menu.NONE, R.string.style_terminal);
-        menu.add(Menu.NONE, CONTEXTMENU_HELP_ID, Menu.NONE, R.string.help);
     }
 
     /** Hook system menu to show context menu instead. */
@@ -772,26 +788,25 @@ public void onClick(DialogInterface dialog, int id) {
                 return true;
             }
             case CONTEXTMENU_STYLING_ID: {
-                Intent stylingIntent = new Intent();
-                stylingIntent.setClassName("com.termux.styling", "com.termux.styling.TermuxStyleActivity");
+                Intent stylingIntent = new Intent(this, TermuxStyleActivity.class);
                 try {
                     startActivity(stylingIntent);
                 } catch (ActivityNotFoundException | IllegalArgumentException e) {
-                    // The startActivity() call is not documented to throw IllegalArgumentException.
-                    // However, crash reporting shows that it sometimes does, so catch it here.
-                    new AlertDialog.Builder(this).setMessage(R.string.styling_not_installed)
-                        .setPositiveButton(R.string.styling_install, new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("http://play.google.com/store/apps/details?id=com.termux.styling")));
-                            }
-                        }).setNegativeButton(android.R.string.cancel, null).show();
+                    e.printStackTrace();
                 }
                 return true;
             }
-            case CONTEXTMENU_HELP_ID:
-                startActivity(new Intent(this, TermuxHelpActivity.class));
+            case CONTEXTMENU_TOGGLE_KEEP_SCREEN_ON: {
+                if(mTerminalView.getKeepScreenOn()) {
+                    mTerminalView.setKeepScreenOn(false);
+                    mSettings.setScreenAlwaysOn(this, false);
+                } else {
+                    mTerminalView.setKeepScreenOn(true);
+                    mSettings.setScreenAlwaysOn(this, true);
+                }
                 return true;
+            }
+
             default:
                 return super.onContextItemSelected(item);
         }
diff --git a/app/src/main/java/com/termux/app/TermuxInstaller.java b/app/src/main/java/com/termux/app/TermuxInstaller.java
index 1534d6b..63e8ae7 100644
--- a/app/src/main/java/com/termux/app/TermuxInstaller.java
+++ b/app/src/main/java/com/termux/app/TermuxInstaller.java
@@ -7,6 +7,7 @@
 import android.content.DialogInterface;
 import android.content.DialogInterface.OnClickListener;
 import android.content.DialogInterface.OnDismissListener;
+import android.content.res.AssetManager;
 import android.os.Build;
 import android.os.Environment;
 import android.os.UserManager;
@@ -40,7 +41,7 @@
  * <p/>
  * (3) A staging folder, $STAGING_PREFIX, is {@link #deleteFolder(File)} if left over from broken installation below.
  * <p/>
- * (4) The architecture is determined and an appropriate bootstrap zip url is determined in {@link #determineZipUrl()}.
+ * (4) The architecture is determined and an appropriate bootstrap zip name is determined in {@link #determineZipName()}.
  * <p/>
  * (5) The zip, containing entries relative to the $PREFIX, is is downloaded and extracted by a zip input stream
  * continuously encountering zip file entries:
@@ -89,8 +90,10 @@ public void run() {
                     final byte[] buffer = new byte[8096];
                     final List<Pair<String, String>> symlinks = new ArrayList<>(50);
 
-                    final URL zipUrl = determineZipUrl();
-                    try (ZipInputStream zipInput = new ZipInputStream(zipUrl.openStream())) {
+                    final String bootstrapArchiveName = determineZipName();
+                    AssetManager assetManager = activity.getAssets();
+
+                    try (ZipInputStream zipInput = new ZipInputStream(assetManager.open(bootstrapArchiveName))) {
                         ZipEntry zipEntry;
                         while ((zipEntry = zipInput.getNextEntry()) != null) {
                             if (zipEntry.getName().equals("SYMLINKS.txt")) {
@@ -183,9 +186,9 @@ public void run() {
     }
 
     /** Get bootstrap zip url for this systems cpu architecture. */
-    static URL determineZipUrl() throws MalformedURLException {
+    static String determineZipName() {
         String archName = determineTermuxArchName();
-        return new URL("https://termux.net/bootstrap/bootstrap-" + archName + ".zip");
+        return new String("bootstrap-" + archName);
     }
 
     private static String determineTermuxArchName() {
@@ -271,5 +274,4 @@ public void run() {
             }
         }.start();
     }
-
 }
diff --git a/app/src/main/java/com/termux/app/TermuxPreferences.java b/app/src/main/java/com/termux/app/TermuxPreferences.java
index 3ab729f..a50bb1a 100644
--- a/app/src/main/java/com/termux/app/TermuxPreferences.java
+++ b/app/src/main/java/com/termux/app/TermuxPreferences.java
@@ -32,10 +32,12 @@
     private final int MIN_FONTSIZE;
     private static final int MAX_FONTSIZE = 256;
 
+    private static final String SCREEN_ALWAYS_ON_KEY = "screen_always_on";
     private static final String SHOW_EXTRA_KEYS_KEY = "show_extra_keys";
     private static final String FONTSIZE_KEY = "fontsize";
     private static final String CURRENT_SESSION_KEY = "current_session";
 
+    private boolean mScreenAlwaysOn;
     private int mFontSize;
 
     @AsciiBellBehaviour
@@ -54,6 +56,7 @@
         // to prevent invisible text due to zoom be mistake:
         MIN_FONTSIZE = (int) (4f * dipInPixels);
 
+        mScreenAlwaysOn = prefs.getBoolean(SCREEN_ALWAYS_ON_KEY, false);
         mShowExtraKeys = prefs.getBoolean(SHOW_EXTRA_KEYS_KEY, false);
 
         // http://www.google.com/design/spec/style/typography.html#typography-line-height
@@ -69,6 +72,15 @@
         mFontSize = Math.max(MIN_FONTSIZE, Math.min(mFontSize, MAX_FONTSIZE));
     }
 
+    boolean isScreenAlwaysOn() {
+        return mScreenAlwaysOn;
+    }
+
+    void setScreenAlwaysOn(Context context, boolean newValue) {
+        mScreenAlwaysOn = newValue;
+        PreferenceManager.getDefaultSharedPreferences(context).edit().putBoolean(SCREEN_ALWAYS_ON_KEY, newValue).apply();
+    }
+
     boolean isShowExtraKeys() {
         return mShowExtraKeys;
     }
diff --git a/app/src/main/java/com/termux/boot/BootJobService.java b/app/src/main/java/com/termux/boot/BootJobService.java
new file mode 100644
index 0000000..6483e64
--- /dev/null
+++ b/app/src/main/java/com/termux/boot/BootJobService.java
@@ -0,0 +1,46 @@
+package com.termux.boot;
+
+import android.app.job.JobParameters;
+import android.app.job.JobService;
+import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Build;
+import android.os.PersistableBundle;
+
+public class BootJobService extends JobService {
+
+    public static final String SCRIPT_FILE_PATH = "com.termux.boot.script_path";
+
+    // Constants from TermuxService.
+    private static final String TERMUX_SERVICE = "com.termux.app.TermuxService";
+    private static final String ACTION_EXECUTE = "com.termux.service_execute";
+    private static final String EXTRA_EXECUTE_IN_BACKGROUND = "com.termux.execute.background";
+
+    @Override
+    public boolean onStartJob(JobParameters params) {
+        PersistableBundle extras = params.getExtras();
+        String filePath = extras.getString(SCRIPT_FILE_PATH);
+
+        Uri scriptUri = new Uri.Builder().scheme("com.termux.file").path(filePath).build();
+        Intent executeIntent = new Intent(ACTION_EXECUTE, scriptUri);
+        executeIntent.setClassName("com.termux", TERMUX_SERVICE);
+        executeIntent.putExtra(EXTRA_EXECUTE_IN_BACKGROUND, true);
+
+        Context context = getApplicationContext();
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+            // https://developer.android.com/about/versions/oreo/background.html
+            context.startForegroundService(executeIntent);
+        } else {
+            context.startService(executeIntent);
+        }
+
+        return true;
+    }
+
+    @Override
+    public boolean onStopJob(JobParameters params) {
+        return true;
+    }
+
+}
diff --git a/app/src/main/java/com/termux/boot/BootReceiver.java b/app/src/main/java/com/termux/boot/BootReceiver.java
new file mode 100644
index 0000000..83fcc8c
--- /dev/null
+++ b/app/src/main/java/com/termux/boot/BootReceiver.java
@@ -0,0 +1,79 @@
+package com.termux.boot;
+
+import android.annotation.SuppressLint;
+import android.app.job.JobInfo;
+import android.app.job.JobScheduler;
+import android.content.BroadcastReceiver;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.PersistableBundle;
+import android.util.Log;
+
+import java.io.File;
+import java.util.Arrays;
+import java.util.Comparator;
+
+@SuppressLint("SdCardPath")
+public class BootReceiver extends BroadcastReceiver {
+
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        if (!Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction())) return;
+
+        String BOOT_SCRIPT_PATH;
+
+        if(new File("/data/data/com.termux/files/home/.termux/boot").exists()) {
+            BOOT_SCRIPT_PATH = "/data/data/com.termux/files/home/.termux/boot";
+        } else if (new File("/data/data/com.termux/files/home/.bootscripts").exists()){
+            BOOT_SCRIPT_PATH = "/data/data/com.termux/files/home/.bootscripts";
+        } else {
+            BOOT_SCRIPT_PATH = "/data/data/com.termux/files/usr/etc/init.d";
+        }
+
+        final File BOOT_SCRIPT_DIR = new File(BOOT_SCRIPT_PATH);
+        File[] files = BOOT_SCRIPT_DIR.listFiles();
+        if (files == null) files = new File[0];
+
+        // Sort files so that they get executed in a repeatable and logical order.
+        Arrays.sort(files, new Comparator<File>() {
+            @Override
+            public int compare(File f1, File f2) {
+                return f1.getName().compareTo(f2.getName());
+            }
+        });
+
+        StringBuilder logMessage = new StringBuilder();
+        for (File file : files) {
+            if (!file.isFile()) return;
+
+            if (logMessage.length() > 0) logMessage.append(", ");
+            logMessage.append(file.getName());
+
+            ensureFileReadableAndExecutable(file);
+            PersistableBundle extras = new PersistableBundle();
+            extras.putString(BootJobService.SCRIPT_FILE_PATH, file.getAbsolutePath());
+
+            ComponentName serviceComponent = new ComponentName(context, BootJobService.class);
+            JobInfo job = new JobInfo.Builder(0, serviceComponent).setExtras(extras).setOverrideDeadline(3 * 1000).build();
+            JobScheduler jobScheduler = (JobScheduler) context.getSystemService(Context.JOB_SCHEDULER_SERVICE);
+            assert jobScheduler != null;
+            jobScheduler.schedule(job);
+        }
+
+        if (logMessage.length() > 0) {
+            Log.i("termux-boot", "Executed files at boot: " + logMessage);
+        } else {
+            Log.i("termux-boot", "No files to execute at boot");
+        }
+    }
+
+    /** Ensure readable and executable file if user forgot to do so. */
+    @SuppressWarnings("ResultOfMethodCallIgnored")
+    private static void ensureFileReadableAndExecutable(File file) {
+        if (!file.canRead()) file.setReadable(true);
+        if (!file.canExecute()) file.setExecutable(true);
+    }
+
+}
diff --git a/app/src/main/java/com/termux/filepicker/TermuxFileReceiverActivity.java b/app/src/main/java/com/termux/filepicker/TermuxFileReceiverActivity.java
index 6fafbe3..173add6 100644
--- a/app/src/main/java/com/termux/filepicker/TermuxFileReceiverActivity.java
+++ b/app/src/main/java/com/termux/filepicker/TermuxFileReceiverActivity.java
@@ -26,8 +26,8 @@
 public class TermuxFileReceiverActivity extends Activity {
 
     static final String TERMUX_RECEIVEDIR = TermuxService.FILES_PATH + "/home/downloads";
-    static final String EDITOR_PROGRAM = TermuxService.HOME_PATH + "/bin/termux-file-editor";
-    static final String URL_OPENER_PROGRAM = TermuxService.HOME_PATH + "/bin/termux-url-opener";
+    static final String EDITOR_PROGRAM = TermuxService.HOME_PATH + "/.termux/bin/termux-file-editor";
+    static final String URL_OPENER_PROGRAM = TermuxService.HOME_PATH + "/.termux/bin/termux-url-opener";
 
     /**
      * If the activity should be finished when the name input dialog is dismissed. This is disabled
@@ -127,7 +127,7 @@ public void onTextSet(String text) {
 
                     final File editorProgramFile = new File(EDITOR_PROGRAM);
                     if (!editorProgramFile.isFile()) {
-                        showErrorDialogAndQuit("The following file does not exist:\n$HOME/bin/termux-file-editor\n\n"
+                        showErrorDialogAndQuit("The following file does not exist:\n$HOME/.termux/bin/termux-file-editor\n\n"
                             + "Create this file as a script or a symlink - it will be called with the received file as only argument.");
                         return;
                     }
@@ -196,7 +196,7 @@ public File saveStreamWithName(InputStream in, String attachmentFileName) {
     void handleUrlAndFinish(final String url) {
         final File urlOpenerProgramFile = new File(URL_OPENER_PROGRAM);
         if (!urlOpenerProgramFile.isFile()) {
-            showErrorDialogAndQuit("The following file does not exist:\n$HOME/bin/termux-url-opener\n\n"
+            showErrorDialogAndQuit("The following file does not exist:\n$HOME/.termux/bin/termux-url-opener\n\n"
                 + "Create this file as a script or a symlink - it will be called with the shared URL as only argument.");
             return;
         }
diff --git a/app/src/main/java/com/termux/styling/TermuxStyleActivity.java b/app/src/main/java/com/termux/styling/TermuxStyleActivity.java
new file mode 100644
index 0000000..93b054d
--- /dev/null
+++ b/app/src/main/java/com/termux/styling/TermuxStyleActivity.java
@@ -0,0 +1,174 @@
+package com.termux.styling;
+
+import com.termux.R;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.os.Bundle;
+import android.util.Log;
+import android.util.Pair;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.view.WindowManager;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.Toast;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.nio.charset.StandardCharsets;
+import java.util.ArrayList;
+import java.util.List;
+
+public class TermuxStyleActivity extends Activity {
+
+    private static final String DEFAULT_FILENAME = "Default";
+
+    static class Selectable {
+        final String displayName;
+        final String fileName;
+
+        public Selectable(final String fileName) {
+            String name = fileName.replace('-', ' ');
+            int dotIndex = name.lastIndexOf('.');
+            if (dotIndex != -1) name = name.substring(0, dotIndex);
+
+            this.displayName = capitalize(name);
+            this.fileName = fileName;
+        }
+
+        @Override
+        public String toString() {
+            return displayName;
+        }
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        // Avoid dim behind:
+        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);
+        setContentView(R.layout.styling_layout);
+
+        final Button colorSpinner = (Button) findViewById(R.id.color_spinner);
+        final Button fontSpinner = (Button) findViewById(R.id.font_spinner);
+
+        final ArrayAdapter<Selectable> colorAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item);
+
+        colorSpinner.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                new AlertDialog.Builder(TermuxStyleActivity.this).setAdapter(colorAdapter, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        copyFile(colorAdapter.getItem(which), true);
+                    }
+                }).create().show();
+            }
+        });
+
+        final ArrayAdapter<Selectable> fontAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item);
+        fontSpinner.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                new AlertDialog.Builder(TermuxStyleActivity.this).setAdapter(fontAdapter, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        copyFile(fontAdapter.getItem(which), false);
+                    }
+                }).create().show();
+            }
+        });
+
+        List<Selectable> colorList = new ArrayList<>();
+        List<Selectable> fontList = new ArrayList<>();
+        for (String assetType : new String[]{"colors", "fonts"}) {
+            boolean isColors = assetType.equals("colors");
+            String assetsFileExtension = isColors ? ".properties" : ".ttf";
+            List<Selectable> currentList = isColors ? colorList : fontList;
+
+            currentList.add(new Selectable(isColors ? DEFAULT_FILENAME : DEFAULT_FILENAME));
+
+            try {
+                for (String f : getAssets().list(assetType)) {
+                    if (f.endsWith(assetsFileExtension)) currentList.add(new Selectable(f));
+                }
+            } catch (IOException e) {
+                throw new RuntimeException(e);
+            }
+        }
+        Pair<List<Selectable>, List<Selectable>> result = Pair.create(colorList, fontList);
+
+        colorAdapter.addAll(result.first);
+        fontAdapter.addAll(result.second);
+    }
+
+    void copyFile(Selectable mCurrentSelectable, boolean colors) {
+        final String outputFile = colors ? "colors.properties" : "font.ttf";
+        try {
+            final String assetsFolder = colors ? "colors" : "fonts";
+
+            Context context = createPackageContext("com.termux", Context.CONTEXT_IGNORE_SECURITY);
+            File homeDir = new File(context.getFilesDir(), "home");
+            File termuxDir = new File(homeDir, ".termux");
+            File destinationFile = new File(termuxDir, outputFile);
+            if (!(termuxDir.isDirectory() || termuxDir.mkdirs()))
+                throw new RuntimeException("Cannot create termux dir=" + termuxDir.getAbsolutePath());
+
+            // Fix for if the user has messed up with chmod:
+            destinationFile.setWritable(true);
+            destinationFile.getParentFile().setWritable(true);
+            destinationFile.getParentFile().setExecutable(true);
+
+            boolean defaultChoice = mCurrentSelectable.fileName.equals(DEFAULT_FILENAME);
+            // Write to existing file to keep symlink if this is used.
+            try (FileOutputStream out = new FileOutputStream(destinationFile)) {
+                if (defaultChoice) {
+                    if (colors) {
+                        byte[] comment = "# Using default color theme.".getBytes(StandardCharsets.UTF_8);
+                        out.write(comment);
+                    } else {
+                        // Just leave an empty font file as a marker.
+                    }
+                } else {
+                    try (InputStream in = getAssets().open(assetsFolder + "/" + mCurrentSelectable.fileName)) {
+                        byte[] buffer = new byte[4096];
+                        int len;
+                        while ((len = in.read(buffer)) > 0)
+                            out.write(buffer, 0, len);
+                    }
+                }
+            }
+
+            // Note: Must match constant in Term#onCreate():
+            final String ACTION_RELOAD = "com.termux.app.reload_style";
+            Intent executeIntent = new Intent(ACTION_RELOAD);
+            executeIntent.putExtra(ACTION_RELOAD, colors ? "colors" : "font");
+            sendBroadcast(executeIntent);
+        } catch (Exception e) {
+            Log.w("termux", "Failed to write " + outputFile, e);
+            String message = getResources().getString(R.string.styling_writing_failed) + e.getMessage();
+            Toast.makeText(this, message, Toast.LENGTH_LONG).show();
+        }
+    }
+
+    private static String capitalize(String str) {
+        boolean lastWhitespace = true;
+        char[] chars = str.toCharArray();
+        for (int i = 0; i < chars.length; i++) {
+            if (Character.isLetter(chars[i])) {
+                if (lastWhitespace) chars[i] = Character.toUpperCase(chars[i]);
+                lastWhitespace = false;
+            } else {
+                lastWhitespace = Character.isWhitespace(chars[i]);
+            }
+        }
+        return new String(chars);
+    }
+}
diff --git a/app/src/main/java/com/termux/widget/TermuxCreateShortcutActivity.java b/app/src/main/java/com/termux/widget/TermuxCreateShortcutActivity.java
new file mode 100644
index 0000000..95648e2
--- /dev/null
+++ b/app/src/main/java/com/termux/widget/TermuxCreateShortcutActivity.java
@@ -0,0 +1,120 @@
+package com.termux.widget;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
+import android.widget.ListView;
+
+import java.io.File;
+import java.io.FileFilter;
+import java.util.Arrays;
+import java.util.Comparator;
+
+import com.termux.R;
+
+public class TermuxCreateShortcutActivity extends Activity {
+
+    private ListView mListView;
+    private File mCurrentDirectory;
+    private File[] mCurrentFiles;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.shortcuts_listview);
+        mListView = (ListView) findViewById(R.id.list);
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+        updateListview(TermuxWidgetService.SHORTCUTS_DIR);
+
+        mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view,
+                                    int position, long id) {
+                final Context context = TermuxCreateShortcutActivity.this;
+                File clickedFile = mCurrentFiles[position];
+                if (clickedFile.isDirectory()) {
+                    updateListview(clickedFile);
+                    return;
+                }
+
+                Intent.ShortcutIconResource icon = Intent.ShortcutIconResource.fromContext(context, R.mipmap.ic_launcher);
+
+                Uri scriptUri = new Uri.Builder().scheme("com.termux.file").path(clickedFile.getAbsolutePath()).build();
+                Intent executeIntent = new Intent(context, TermuxLaunchShortcutActivity.class);
+                executeIntent.setData(scriptUri);
+                executeIntent.putExtra(TermuxLaunchShortcutActivity.TOKEN_NAME, TermuxLaunchShortcutActivity.getGeneratedToken(context));
+
+                Intent intent = new Intent();
+                intent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, executeIntent);
+                intent.putExtra(Intent.EXTRA_SHORTCUT_NAME, clickedFile.getName());
+                intent.putExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE, icon);
+
+                setResult(RESULT_OK, intent);
+                finish();
+            }
+        });
+    }
+
+    private void updateListview(File directory) {
+        mCurrentDirectory = directory;
+        mCurrentFiles = directory.listFiles(new FileFilter() {
+            @Override
+            public boolean accept(File pathname) {
+                return !pathname.getName().startsWith(".");
+            }
+        });
+        if (mCurrentFiles == null) mCurrentFiles = new File[0];
+
+        Arrays.sort(mCurrentFiles, new Comparator<File>() {
+            @Override
+            public int compare(File f1, File f2) {
+                return f1.getName().compareTo(f2.getName());
+            }
+        });
+
+        final boolean isTopDir = directory.equals(TermuxWidgetService.SHORTCUTS_DIR);
+        getActionBar().setDisplayHomeAsUpEnabled(!isTopDir);
+
+        if (isTopDir && mCurrentFiles.length == 0) {
+            // Create if necessary so user can more easily add.
+            TermuxWidgetService.SHORTCUTS_DIR.mkdirs();
+            new AlertDialog.Builder(this).setMessage(R.string.widget_no_shortcut_scripts).setOnDismissListener(new DialogInterface.OnDismissListener() {
+                @Override
+                public void onDismiss(DialogInterface dialog) {
+                    finish();
+                }
+            }).show();
+            return;
+        }
+
+        final String[] values = new String[mCurrentFiles.length];
+        for (int i = 0; i < values.length; i++)
+            values[i] = mCurrentFiles[i].getName() +
+                    (mCurrentFiles[i].isDirectory() ? "/" : "");
+
+        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, android.R.id.text1, values);
+        mListView.setAdapter(adapter);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        if (item.getItemId() == android.R.id.home) {
+            updateListview(mCurrentDirectory.getParentFile());
+            return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+}
diff --git a/app/src/main/java/com/termux/widget/TermuxLaunchShortcutActivity.java b/app/src/main/java/com/termux/widget/TermuxLaunchShortcutActivity.java
new file mode 100644
index 0000000..e2d2ee5
--- /dev/null
+++ b/app/src/main/java/com/termux/widget/TermuxLaunchShortcutActivity.java
@@ -0,0 +1,70 @@
+package com.termux.widget;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.net.Uri;
+import android.util.Log;
+import android.view.Gravity;
+import android.widget.Toast;
+
+import java.io.File;
+import java.util.UUID;
+
+import com.termux.R;
+
+/**
+ * An activity to launch a shortcut. We want to a launch a service directly, but a shortcut
+ * cannot be used to launch a service, only activities, so have to go through this activity.
+ */
+public class TermuxLaunchShortcutActivity extends Activity {
+
+	static final String TOKEN_NAME = "com.termux.shortcut.token";
+
+	public static String getGeneratedToken(Context context) {
+		SharedPreferences prefs = context.getSharedPreferences("token", Context.MODE_PRIVATE);
+		String token = prefs.getString("token", null);
+		if (token == null) {
+			token = UUID.randomUUID().toString();
+			prefs.edit().putString("token", token).apply();
+		}
+		return token;
+	}
+
+	@Override
+	protected void onResume() {
+		super.onResume();
+
+		Intent intent = getIntent();
+		String token = intent.getStringExtra(TOKEN_NAME);
+		if (token == null || !token.equals(getGeneratedToken(this))) {
+			Log.w("termux", "Strange token: " + token);
+			Toast.makeText(this, R.string.widget_bad_token_message, Toast.LENGTH_LONG).show();
+			finish();
+			return;
+		}
+
+		File clickedFile = new File(intent.getData().getPath());
+		TermuxWidgetProvider.ensureFileReadableAndExecutable(clickedFile);
+
+		// Do not use the intent data passed in, since that may be an old one with a file:// uri
+		// which is not allowed starting with Android 7.
+		Uri scriptUri = new Uri.Builder().scheme("com.termux.file").path(clickedFile.getAbsolutePath()).build();
+
+		Intent executeIntent = new Intent(TermuxWidgetProvider.ACTION_EXECUTE, scriptUri);
+		executeIntent.setClassName("com.termux", TermuxWidgetProvider.TERMUX_SERVICE);
+		if (clickedFile.getParentFile().getName().equals("tasks")) {
+			executeIntent.putExtra("com.termux.execute.background", true);
+			// Show feedback for executed background task.
+			String message = "Task executed: " + clickedFile.getName();
+			Toast toast = Toast.makeText(this, message, Toast.LENGTH_SHORT);
+			toast.setGravity(Gravity.CENTER, 0, 0);
+			toast.show();
+		}
+
+		startService(executeIntent);
+		finish();
+	}
+
+}
diff --git a/app/src/main/java/com/termux/widget/TermuxWidgetProvider.java b/app/src/main/java/com/termux/widget/TermuxWidgetProvider.java
new file mode 100644
index 0000000..6f4a743
--- /dev/null
+++ b/app/src/main/java/com/termux/widget/TermuxWidgetProvider.java
@@ -0,0 +1,122 @@
+package com.termux.widget;
+
+import android.app.PendingIntent;
+import android.appwidget.AppWidgetManager;
+import android.appwidget.AppWidgetProvider;
+import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
+import android.view.Gravity;
+import android.widget.RemoteViews;
+import android.widget.Toast;
+
+import java.io.File;
+
+import com.termux.R;
+/**
+ * Widget providing a list to launch scripts in $HOME/.termux/shortcuts/.
+ * <p>
+ * See https://developer.android.com/guide/topics/appwidgets/index.html
+ */
+public final class TermuxWidgetProvider extends AppWidgetProvider {
+
+    private static final String LIST_ITEM_CLICKED_ACTION = "com.termux.widgets.LIST_ITEM_CLICKED_ACTION";
+    private static final String REFRESH_WIDGET_ACTION = "com.termux.widgets.REFRESH_WIDGET_ACTION";
+    public static final String EXTRA_CLICKED_FILE = "com.termux.widgets.EXTRA_CLICKED_FILE";
+
+    public static final String TERMUX_SERVICE = "com.termux.app.TermuxService";
+    public static final String ACTION_EXECUTE = "com.termux.service_execute";
+
+
+    /**
+     * "This is called to update the App Widget at intervals defined by the updatePeriodMillis attribute in the
+     * AppWidgetProviderInfo (see Adding the AppWidgetProviderInfo Metadata above). This method is also called when the
+     * user adds the App Widget, so it should perform the essential setup, such as define event handlers for Views and
+     * start a temporary Service, if necessary. However, if you have declared a configuration Activity, this method is
+     * not called when the user adds the App Widget, but is called for the subsequent updates. It is the responsibility
+     * of the configuration Activity to perform the first update when configuration is done. (See Creating an App Widget
+     * Configuration Activity below.)"
+     */
+    @Override
+    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
+        for (int appWidgetId : appWidgetIds) {
+            RemoteViews rv = new RemoteViews(context.getPackageName(), R.layout.widget_layout);
+
+            // The empty view is displayed when the collection has no items. It should be a sibling
+            // of the collection view:
+            rv.setEmptyView(R.id.widget_list, R.id.empty_view);
+
+            // Setup intent which points to the TermuxWidgetService which will provide the views for this collection.
+            Intent intent = new Intent(context, TermuxWidgetService.class);
+            intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);
+            // When intents are compared, the extras are ignored, so we need to embed the extras
+            // into the data so that the extras will not be ignored.
+            intent.setData(Uri.parse(intent.toUri(Intent.URI_INTENT_SCHEME)));
+            rv.setRemoteAdapter(R.id.widget_list, intent);
+
+            // Setup refresh button:
+            Intent refreshIntent = new Intent(context, TermuxWidgetProvider.class);
+            refreshIntent.setAction(TermuxWidgetProvider.REFRESH_WIDGET_ACTION);
+            refreshIntent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);
+            refreshIntent.setData(Uri.parse(refreshIntent.toUri(Intent.URI_INTENT_SCHEME)));
+            PendingIntent refreshPendingIntent = PendingIntent.getBroadcast(context, 0, refreshIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+            rv.setOnClickPendingIntent(R.id.refresh_button, refreshPendingIntent);
+
+            // Here we setup the a pending intent template. Individuals items of a collection
+            // cannot setup their own pending intents, instead, the collection as a whole can
+            // setup a pending intent template, and the individual items can set a fillInIntent
+            // to create unique before on an item to item basis.
+            Intent toastIntent = new Intent(context, TermuxWidgetProvider.class);
+            toastIntent.setAction(TermuxWidgetProvider.LIST_ITEM_CLICKED_ACTION);
+            toastIntent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);
+            intent.setData(Uri.parse(intent.toUri(Intent.URI_INTENT_SCHEME)));
+            PendingIntent toastPendingIntent = PendingIntent.getBroadcast(context, 0, toastIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+            rv.setPendingIntentTemplate(R.id.widget_list, toastPendingIntent);
+
+            appWidgetManager.updateAppWidget(appWidgetId, rv);
+        }
+    }
+
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        super.onReceive(context, intent);
+
+        switch (intent.getAction()) {
+            case LIST_ITEM_CLICKED_ACTION:
+                String clickedFilePath = intent.getStringExtra(EXTRA_CLICKED_FILE);
+                File clickedFile = new File(clickedFilePath);
+                if (clickedFile.isDirectory()) return;
+                ensureFileReadableAndExecutable(clickedFile);
+                Uri scriptUri = new Uri.Builder().scheme("com.termux.file").path(clickedFilePath).build();
+
+                // Note: Must match TermuxService#ACTION_EXECUTE constant:
+                Intent executeIntent = new Intent(ACTION_EXECUTE, scriptUri);
+                executeIntent.setClassName("com.termux", TERMUX_SERVICE);
+                if (clickedFile.getParentFile().getName().equals("tasks")) {
+                    executeIntent.putExtra("com.termux.execute.background", true);
+                    // Show feedback for executed background task.
+                    String message = "Task executed: " + clickedFile.getName();
+                    Toast toast = Toast.makeText(context, message, Toast.LENGTH_SHORT);
+                    toast.setGravity(Gravity.CENTER, 0, 0);
+                    toast.show();
+                }
+                context.startService(executeIntent);
+                break;
+            case REFRESH_WIDGET_ACTION:
+                int appWidgetId = intent.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, AppWidgetManager.INVALID_APPWIDGET_ID);
+                AppWidgetManager.getInstance(context).notifyAppWidgetViewDataChanged(appWidgetId, R.id.widget_list);
+
+                Toast toast = Toast.makeText(context, R.string.widget_scripts_reloaded, Toast.LENGTH_SHORT);
+                toast.setGravity(Gravity.CENTER, 0, 0);
+                toast.show();
+                break;
+        }
+    }
+
+    /** Ensure readable and executable file if user forgot to do so. */
+    static void ensureFileReadableAndExecutable(File file) {
+        if (!file.canRead()) file.setReadable(true);
+        if (!file.canExecute()) file.setExecutable(true);
+    }
+
+}
diff --git a/app/src/main/java/com/termux/widget/TermuxWidgetService.java b/app/src/main/java/com/termux/widget/TermuxWidgetService.java
new file mode 100644
index 0000000..f2154a4
--- /dev/null
+++ b/app/src/main/java/com/termux/widget/TermuxWidgetService.java
@@ -0,0 +1,159 @@
+package com.termux.widget;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.Intent;
+import android.widget.RemoteViews;
+import android.widget.RemoteViewsService;
+
+import java.io.File;
+import java.io.FileFilter;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Comparator;
+import java.util.List;
+
+import com.termux.R;
+
+public final class TermuxWidgetService extends RemoteViewsService {
+
+    @SuppressLint("SdCardPath")
+    public static final File SHORTCUTS_DIR = new File("/data/data/com.termux/files/home/.shortcuts");
+
+    public static final class TermuxWidgetItem {
+
+        /** Label to display in the list. */
+        public final String mLabel;
+        /** The file which this item represents, sent with the {@link TermuxWidgetProvider#EXTRA_CLICKED_FILE} extra. */
+        public final String mFile;
+
+        public TermuxWidgetItem(File file, int depth) {
+            this.mLabel = (depth > 0 ? (file.getParentFile().getName() + "/") : "")
+                    + file.getName().replace('-', ' ');
+            this.mFile = file.getAbsolutePath();
+        }
+
+    }
+
+    @Override
+    public RemoteViewsFactory onGetViewFactory(Intent intent) {
+        return new ListRemoteViewsFactory(getApplicationContext());
+    }
+
+    public static class ListRemoteViewsFactory implements RemoteViewsService.RemoteViewsFactory {
+        private final List<TermuxWidgetItem> mWidgetItems = new ArrayList<>();
+        private final Context mContext;
+
+        public ListRemoteViewsFactory(Context context) {
+            mContext = context;
+        }
+
+        @Override
+        public void onCreate() {
+            // In onCreate() you setup any connections / cursors to your data source. Heavy lifting,
+            // for example downloading or creating content etc, should be deferred to onDataSetChanged()
+            // or getViewAt(). Taking more than 20 seconds in this call will result in an ANR.
+        }
+
+        @Override
+        public void onDestroy() {
+            mWidgetItems.clear();
+        }
+
+        @Override
+        public int getCount() {
+            return mWidgetItems.size();
+        }
+
+        @Override
+        public RemoteViews getViewAt(int position) {
+            // Position will always range from 0 to getCount() - 1.
+            TermuxWidgetItem widgetItem = mWidgetItems.get(position);
+
+            // Construct remote views item based on the item xml file and set text based on position.
+            RemoteViews rv = new RemoteViews(mContext.getPackageName(), R.layout.widget_item);
+            rv.setTextViewText(R.id.widget_item, widgetItem.mLabel);
+
+            // Next, we set a fill-intent which will be used to fill-in the pending intent template
+            // which is set on the collection view in TermuxAppWidgetProvider.
+            Intent fillInIntent = new Intent().putExtra(TermuxWidgetProvider.EXTRA_CLICKED_FILE, widgetItem.mFile);
+            rv.setOnClickFillInIntent(R.id.widget_item_layout, fillInIntent);
+
+            // You can do heaving lifting in here, synchronously. For example, if you need to
+            // process an image, fetch something from the network, etc., it is ok to do it here,
+            // synchronously. A loading view will show up in lieu of the actual contents in the
+            // interim.
+
+            return rv;
+        }
+
+        @Override
+        public RemoteViews getLoadingView() {
+            // You can create a custom loading view (for instance when getViewAt() is slow.) If you
+            // return null here, you will get the default loading view.
+            return null;
+        }
+
+        @Override
+        public int getViewTypeCount() {
+            return 1;
+        }
+
+        @Override
+        public long getItemId(int position) {
+            return position;
+        }
+
+        @Override
+        public boolean hasStableIds() {
+            return true;
+        }
+
+        @SuppressLint("SdCardPath")
+        @Override
+        public void onDataSetChanged() {
+            // This is triggered when you call AppWidgetManager notifyAppWidgetViewDataChanged
+            // on the collection view corresponding to this factory. You can do heaving lifting in
+            // here, synchronously. For example, if you need to process an image, fetch something
+            // from the network, etc., it is ok to do it here, synchronously. The widget will remain
+            // in its current state while work is being done here, so you don't need to worry about
+            // locking up the widget.
+            mWidgetItems.clear();
+            // Create directory if necessary so user more easily finds where to put shortcuts:
+            SHORTCUTS_DIR.mkdirs();
+
+            addFile(SHORTCUTS_DIR, mWidgetItems, 0);
+        }
+    }
+
+    private static void addFile(File dir, List<TermuxWidgetItem> widgetItems, int depth) {
+        if (depth > 5) return;
+
+        File[] files = dir.listFiles(new FileFilter() {
+            @Override
+            public boolean accept(File pathname) {
+                return !pathname.getName().startsWith(".");
+            }
+        });
+
+        if (files == null) return;
+        Arrays.sort(files, new Comparator<File>() {
+            @Override
+            public int compare(File lhs, File rhs) {
+                if (lhs.isDirectory() != rhs.isDirectory()) {
+                    return lhs.isDirectory() ? 1 : -1;
+                }
+                return lhs.getName().compareToIgnoreCase(rhs.getName());
+            }
+        });
+
+        for (File file : files) {
+            if (file.isDirectory()) {
+                addFile(file, widgetItems, depth + 1);
+            } else {
+                widgetItems.add(new TermuxWidgetItem(file, depth));
+            }
+        }
+
+    }
+}
diff --git a/app/src/main/res/drawable/ripple_mask.xml b/app/src/main/res/drawable/ripple_mask.xml
new file mode 100644
index 0000000..fe34991
--- /dev/null
+++ b/app/src/main/res/drawable/ripple_mask.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ripple xmlns:android="http://schemas.android.com/apk/res/android"
+    android:color="@android:color/darker_gray" >
+
+    <item android:id="@android:id/mask">
+        <shape android:shape="rectangle" >
+            <solid android:color="#FF000000" />
+        </shape>
+    </item>
+
+</ripple>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/widgetpreview.png b/app/src/main/res/drawable/widgetpreview.png
new file mode 100644
index 0000000..8052608
Binary files /dev/null and b/app/src/main/res/drawable/widgetpreview.png differ
diff --git a/app/src/main/res/layout/shortcuts_listview.xml b/app/src/main/res/layout/shortcuts_listview.xml
new file mode 100644
index 0000000..5c175c3
--- /dev/null
+++ b/app/src/main/res/layout/shortcuts_listview.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ListView xmlns:android="http://schemas.android.com/apk/res/android"
+          android:id="@+id/list"
+          android:layout_height="wrap_content"
+          android:layout_width="match_parent">
+</ListView>
diff --git a/app/src/main/res/layout/styling_layout.xml b/app/src/main/res/layout/styling_layout.xml
new file mode 100644
index 0000000..61ff41c
--- /dev/null
+++ b/app/src/main/res/layout/styling_layout.xml
@@ -0,0 +1,28 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    style="?android:attr/buttonBarStyle"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:divider="@android:drawable/divider_horizontal_bright"
+    android:dividerPadding="8dip"
+    android:orientation="horizontal"
+    android:showDividers="middle"
+    tools:context="com.termux.styling.TermuxStyleActivity" >
+
+    <Button
+        android:id="@+id/color_spinner"
+        style="?android:attr/buttonBarButtonStyle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_weight="1"
+        android:text="@string/styling_color_prompt" />
+
+    <Button
+        android:id="@+id/font_spinner"
+        style="?android:attr/buttonBarButtonStyle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_weight="1"
+        android:text="@string/styling_font_prompt" />
+
+</LinearLayout>
diff --git a/app/src/main/res/layout/widget_item.xml b/app/src/main/res/layout/widget_item.xml
new file mode 100644
index 0000000..b0d52aa
--- /dev/null
+++ b/app/src/main/res/layout/widget_item.xml
@@ -0,0 +1,19 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/widget_item_layout"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@drawable/ripple_mask"
+    android:padding="10dp" >
+
+    <!--
+         See http://stackoverflow.com/questions/16278159/why-linearlayouts-margin-is-being-ignored-if-used-as-listview-row-view
+		 for the extra layout wrapper.
+    -->
+
+    <TextView
+        android:id="@+id/widget_item"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:textColor="@android:color/primary_text_light" />
+
+</FrameLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/widget_layout.xml b/app/src/main/res/layout/widget_layout.xml
new file mode 100644
index 0000000..8816a3b
--- /dev/null
+++ b/app/src/main/res/layout/widget_layout.xml
@@ -0,0 +1,64 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:padding="0dp" >
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:padding="0dp"
+        android:paddingTop="6dp" >
+
+        <LinearLayout
+            android:id="@+id/top_row"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="#FF000000"
+            android:orientation="horizontal"
+            android:padding="6dp" >
+
+            <TextView
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_vertical"
+                android:layout_weight="2.0"
+                android:text="@string/application_name"
+                android:textColor="@android:color/primary_text_dark"
+                android:textSize="18sp" />
+        </LinearLayout>
+
+        <ListView
+            android:id="@+id/widget_list"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_below="@id/top_row"
+            android:background="@android:color/background_light"
+            android:divider="@android:color/darker_gray"
+            android:dividerHeight="1px" >
+        </ListView>
+
+        <!-- Shown for empty collection due to rv.setEmptyView(R.id.widget_list, R.id.empty_view) being called: -->
+
+        <TextView
+            android:id="@+id/empty_view"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_below="@id/top_row"
+            android:background="@android:color/white"
+            android:padding="6dp"
+            android:text="@string/widget_no_shortcut_scripts"
+            android:textColor="@android:color/black" />
+    </RelativeLayout>
+
+    <ImageButton
+        android:id="@+id/refresh_button"
+        style="?android:attr/borderlessButtonStyle"
+        android:layout_width="34dp"
+        android:layout_height="34dp"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentTop="true"
+        android:contentDescription="@string/widget_refresh"
+        android:tint="#99000000"
+        android:src="@android:drawable/stat_notify_sync" />
+
+</RelativeLayout>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 4686e51..b55013d 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -1,51 +1,53 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-   <string name="application_name">Termux</string>
-   <string name="shared_user_label">Termux user</string>
-   <string name="new_session">New session</string>
-   <string name="new_session_failsafe">Failsafe</string>
-   <string name="toggle_soft_keyboard">Keyboard</string>
-   <string name="reset_terminal">Reset</string>
-   <string name="style_terminal">Style</string>
-   <string name="share_transcript_title">Terminal transcript</string>
-   <string name="help">Help</string>
-
-   <string name="bootstrap_installer_body">Installing…</string>
-   <string name="bootstrap_error_title">Unable to install</string>
-   <string name="bootstrap_error_body">Termux was unable to install the bootstrap packages.\n\nCheck your network connection and try again.</string>
-   <string name="bootstrap_error_abort">Abort</string>
-   <string name="bootstrap_error_try_again">Try again</string>
-   <string name="bootstrap_error_not_primary_user_message">Termux can only be installed on the primary user account.</string>
-
-   <string name="max_terminals_reached_title">Max terminals reached</string>
-   <string name="max_terminals_reached_message">Close down existing ones before creating new.</string>
-
-   <string name="reset_toast_notification">Terminal reset.</string>
-
-  <string name="select_url">Select URL</string>
-  <string name="select_url_dialog_title">Click URL to copy or long press to open</string>
-  <string name="select_all_and_share">Share transcript</string>
-  <string name="select_url_no_found">No URL found in the terminal.</string>
-  <string name="select_url_copied_to_clipboard">URL copied to clipboard</string>
-  <string name="share_transcript_chooser_title">Send text to:</string>
-
-  <string name="kill_process">Kill process (%d)</string>
-  <string name="confirm_kill_process">Really kill this session?</string>
-
-  <string name="session_rename_title">Set session name</string>
-  <string name="session_rename_positive_button">Set</string>
-  <string name="session_new_named_title">New named session</string>
-  <string name="session_new_named_positive_button">Create</string>
-
-  <string name="styling_not_installed">The Termux:Style add-on is not installed.</string>
-  <string name="styling_install">Install</string>
-
-  <string name="notification_action_exit">Exit</string>
-  <string name="notification_action_wake_lock">Acquire wakelock</string>
-  <string name="notification_action_wake_unlock">Release wakelock</string>
-
-  <string name="file_received_title">Save file in ~/downloads/</string>
-  <string name="file_received_edit_button">Edit</string>
-  <string name="file_received_open_folder_button">Open folder</string>
-
+    <!-- Termux -->
+    <string name="application_name">Termux</string>
+    <string name="bootstrap_error_abort">Abort</string>
+    <string name="bootstrap_error_body">Termux was unable to install the bootstrap packages.\n\nCheck your network connection and try again.</string>
+    <string name="bootstrap_error_not_primary_user_message">Termux can only be installed on the primary user account.</string>
+    <string name="bootstrap_error_title">Unable to install</string>
+    <string name="bootstrap_error_try_again">Try again</string>
+    <string name="bootstrap_installer_body">Installing…</string>
+    <string name="confirm_kill_process">Really kill this session?</string>
+    <string name="file_received_edit_button">Edit</string>
+    <string name="file_received_open_folder_button">Open folder</string>
+    <string name="file_received_title">Save file in ~/downloads/</string>
+    <string name="kill_process">Kill process (%d)</string>
+    <string name="max_terminals_reached_message">Close down existing ones before creating new.</string>
+    <string name="max_terminals_reached_title">Max terminals reached</string>
+    <string name="new_session_failsafe">Failsafe</string>
+    <string name="new_session">New session</string>
+    <string name="notification_action_exit">Exit</string>
+    <string name="notification_action_wake_lock">Acquire wakelock</string>
+    <string name="notification_action_wake_unlock">Release wakelock</string>
+    <string name="reset_terminal">Reset</string>
+    <string name="reset_toast_notification">Terminal reset.</string>
+    <string name="select_all_and_share">Share transcript</string>
+    <string name="select_url_copied_to_clipboard">URL copied to clipboard</string>
+    <string name="select_url_dialog_title">Click URL to copy or long press to open</string>
+    <string name="select_url_no_found">No URL found in the terminal.</string>
+    <string name="select_url">Select URL</string>
+    <string name="session_new_named_positive_button">Create</string>
+    <string name="session_new_named_title">New named session</string>
+    <string name="session_rename_positive_button">Set</string>
+    <string name="session_rename_title">Set session name</string>
+    <string name="shared_user_label">Termux user</string>
+    <string name="share_transcript_chooser_title">Send text to:</string>
+    <string name="share_transcript_title">Terminal transcript</string>
+    <string name="style_terminal">Style</string>
+    <string name="toggle_keep_screen_on">Keep screen on</string>
+    <string name="toggle_soft_keyboard">Keyboard</string>
+
+    <!-- Termux:Styling -->
+    <string name="styling_color_prompt">Choose color</string>
+    <string name="styling_font_prompt">Choose font</string>
+    <string name="styling_writing_failed">Failed to install file:\n\n</string>
+
+    <!-- Termux:Widget -->
+    <string name="widget_shortcut_name">All shortcuts</string>
+    <string name="widget_single_shortcut_name">Single shortcut</string>
+    <string name="widget_no_shortcut_scripts">No files in\n$HOME/.shortcuts/</string>
+    <string name="widget_refresh">Refresh</string>
+    <string name="widget_scripts_reloaded">Termux shortcuts reloaded</string>
+    <string name="widget_bad_token_message">This shortcut has become invalid - remove and add again.</string>
 </resources>
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
index f7c5cc3..af60e48 100644
--- a/app/src/main/res/values/styles.xml
+++ b/app/src/main/res/values/styles.xml
@@ -28,4 +28,8 @@
         <item name="android:colorAccent">#212121</item>
     </style>
 
+    <style name="StylingDialogTheme" parent="@android:style/Theme.Material.Light.Dialog.NoActionBar.MinWidth">
+        <item name="android:colorAccent">#212121</item>
+    </style>
+
 </resources>
diff --git a/app/src/main/res/xml/termux_appwidget_info.xml b/app/src/main/res/xml/termux_appwidget_info.xml
new file mode 100644
index 0000000..6628fcf
--- /dev/null
+++ b/app/src/main/res/xml/termux_appwidget_info.xml
@@ -0,0 +1,13 @@
+<!--
+	See
+	http://developer.android.com/guide/practices/ui_guidelines/widget_design.html#anatomy_determining_size
+	for how to determine size: 
+-->
+<appwidget-provider xmlns:android="http://schemas.android.com/apk/res/android"
+    android:initialLayout="@layout/widget_layout"
+    android:minHeight="110dp"
+    android:minWidth="110dp"
+    android:previewImage="@drawable/widgetpreview"
+    android:resizeMode="horizontal|vertical"
+    android:updatePeriodMillis="0"
+    android:widgetCategory="home_screen|keyguard" />
